{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/';\nexport const axiosConfig = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const authHeader = () => {\n  const token = localStorage.getItem('accessToken');\n  return {\n    Authorization: token ? `Bearer ${token}` : ''\n  };\n};\naxiosConfig.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});","map":{"version":3,"names":["axios","API_URL","axiosConfig","create","baseURL","headers","authHeader","token","localStorage","getItem","Authorization","interceptors","request","use","config"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/services/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/';\r\n\r\nexport const axiosConfig = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport const authHeader = () => {\r\n  const token = localStorage.getItem('accessToken');\r\n  return {\r\n    Authorization: token ? `Bearer ${token}` : '',\r\n  };\r\n};\r\n\r\naxiosConfig.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('accessToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtCC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,OAAO;IACLC,aAAa,EAAEH,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;EAC7C,CAAC;AACH,CAAC;AAEDL,WAAW,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC/C,MAAMP,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTO,MAAM,CAACT,OAAO,CAACK,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOO,MAAM;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}