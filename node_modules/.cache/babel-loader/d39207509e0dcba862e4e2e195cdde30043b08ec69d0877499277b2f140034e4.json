{"ast":null,"code":"import { axiosConfig } from './axiosConfig';\nimport { canCreate, canUpdate, canDelete } from '../utils/permissions';\nconst API_URL = \"/plants\";\nexport const getPlants = params => {\n  return axiosConfig.get(API_URL, {\n    params\n  });\n};\nexport const getPlantById = id => {\n  return axiosConfig.get(`${API_URL}/${id}`);\n};\nexport const addPlant = (plant, userRole) => {\n  if (!canCreate(userRole)) {\n    throw new Error('Insufficient permissions to create plants');\n  }\n  return axiosConfig.post(API_URL, plant);\n};\nexport const createPlant = (plant, userRole) => {\n  if (!canCreate(userRole)) {\n    throw new Error('Insufficient permissions to create plants');\n  }\n  return axiosConfig.post(API_URL, plant);\n};\nexport const updatePlant = (id, plant, userRole) => {\n  if (!canUpdate(userRole)) {\n    throw new Error('Insufficient permissions to update plants');\n  }\n  return axiosConfig.put(`${API_URL}/${id}`, plant);\n};\nexport const deletePlant = (id, userRole) => {\n  if (!canDelete(userRole)) {\n    throw new Error('Insufficient permissions to delete plants');\n  }\n  return axiosConfig.delete(`${API_URL}/${id}`);\n};","map":{"version":3,"names":["axiosConfig","canCreate","canUpdate","canDelete","API_URL","getPlants","params","get","getPlantById","id","addPlant","plant","userRole","Error","post","createPlant","updatePlant","put","deletePlant","delete"],"sources":["C:/Users/Dell/Desktop/67360ded-0817-4799-8ae5-2823784df4ae-b3f10c22-d1ec-4f70-af75-ccf1409381e7-Sibin-backend/reactapp/src/services/plantService.js"],"sourcesContent":["import { axiosConfig } from './axiosConfig';\nimport { canCreate, canUpdate, canDelete } from '../utils/permissions';\n\nconst API_URL = \"/plants\";\n\nexport const getPlants = (params) => {\n  return axiosConfig.get(API_URL, { params });\n};\n\nexport const getPlantById = (id) => {\n  return axiosConfig.get(`${API_URL}/${id}`);\n};\n\nexport const addPlant = (plant, userRole) => {\n  if (!canCreate(userRole)) {\n    throw new Error('Insufficient permissions to create plants');\n  }\n  return axiosConfig.post(API_URL, plant);\n};\n\nexport const createPlant = (plant, userRole) => {\n  if (!canCreate(userRole)) {\n    throw new Error('Insufficient permissions to create plants');\n  }\n  return axiosConfig.post(API_URL, plant);\n};\n\nexport const updatePlant = (id, plant, userRole) => {\n  if (!canUpdate(userRole)) {\n    throw new Error('Insufficient permissions to update plants');\n  }\n  return axiosConfig.put(`${API_URL}/${id}`, plant);\n};\n\nexport const deletePlant = (id, userRole) => {\n  if (!canDelete(userRole)) {\n    throw new Error('Insufficient permissions to delete plants');\n  }\n  return axiosConfig.delete(`${API_URL}/${id}`);\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAe;AAC3C,SAASC,SAAS,EAAEC,SAAS,EAAEC,SAAS,QAAQ,sBAAsB;AAEtE,MAAMC,OAAO,GAAG,SAAS;AAEzB,OAAO,MAAMC,SAAS,GAAIC,MAAM,IAAK;EACnC,OAAON,WAAW,CAACO,GAAG,CAACH,OAAO,EAAE;IAAEE;EAAO,CAAC,CAAC;AAC7C,CAAC;AAED,OAAO,MAAME,YAAY,GAAIC,EAAE,IAAK;EAClC,OAAOT,WAAW,CAACO,GAAG,CAAC,GAAGH,OAAO,IAAIK,EAAE,EAAE,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,IAAI,CAACX,SAAS,CAACW,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAOb,WAAW,CAACc,IAAI,CAACV,OAAO,EAAEO,KAAK,CAAC;AACzC,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGA,CAACJ,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI,CAACX,SAAS,CAACW,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAOb,WAAW,CAACc,IAAI,CAACV,OAAO,EAAEO,KAAK,CAAC;AACzC,CAAC;AAED,OAAO,MAAMK,WAAW,GAAGA,CAACP,EAAE,EAAEE,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI,CAACV,SAAS,CAACU,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAOb,WAAW,CAACiB,GAAG,CAAC,GAAGb,OAAO,IAAIK,EAAE,EAAE,EAAEE,KAAK,CAAC;AACnD,CAAC;AAED,OAAO,MAAMO,WAAW,GAAGA,CAACT,EAAE,EAAEG,QAAQ,KAAK;EAC3C,IAAI,CAACT,SAAS,CAACS,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAOb,WAAW,CAACmB,MAAM,CAAC,GAAGf,OAAO,IAAIK,EAAE,EAAE,CAAC;AAC/C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}