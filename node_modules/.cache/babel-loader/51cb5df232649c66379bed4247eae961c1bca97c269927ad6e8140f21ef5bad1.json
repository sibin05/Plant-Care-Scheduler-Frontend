{"ast":null,"code":"import{useEffect,useState}from'react';import{axiosConfig}from'../services/axiosConfig';export function useCurrentUser(){const[user,setUser]=useState(null);const[loadingUser,setLoadingUser]=useState(true);useEffect(()=>{async function fetchUser(){try{const res=await axiosConfig.get('/auth/me');setUser(res.data);}catch(_unused){setUser(null);}finally{setLoadingUser(false);}}fetchUser();},[]);return{user,loadingUser};}","map":{"version":3,"names":["useEffect","useState","axiosConfig","useCurrentUser","user","setUser","loadingUser","setLoadingUser","fetchUser","res","get","data","_unused"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/hooks/useCurrentUser.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { axiosConfig } from '../services/axiosConfig';\r\n\r\nexport function useCurrentUser() {\r\n  const [user, setUser] = useState(null);\r\n  const [loadingUser, setLoadingUser] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchUser() {\r\n      try {\r\n        const res = await axiosConfig.get('/auth/me');\r\n        setUser(res.data);\r\n      } catch {\r\n        setUser(null);\r\n      } finally {\r\n        setLoadingUser(false);\r\n      }\r\n    }\r\n    fetchUser();\r\n  }, []);\r\n\r\n  return { user, loadingUser };\r\n}\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,WAAW,KAAQ,yBAAyB,CAErD,MAAO,SAAS,CAAAC,cAAcA,CAAA,CAAG,CAC/B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACK,WAAW,CAAEC,cAAc,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAEpDD,SAAS,CAAC,IAAM,CACd,cAAe,CAAAQ,SAASA,CAAA,CAAG,CACzB,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAP,WAAW,CAACQ,GAAG,CAAC,UAAU,CAAC,CAC7CL,OAAO,CAACI,GAAG,CAACE,IAAI,CAAC,CACnB,CAAE,MAAAC,OAAA,CAAM,CACNP,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRE,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CACAC,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEJ,IAAI,CAAEE,WAAY,CAAC,CAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}