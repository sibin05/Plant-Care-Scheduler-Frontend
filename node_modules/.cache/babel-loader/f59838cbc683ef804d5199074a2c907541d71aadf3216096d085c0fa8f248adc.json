{"ast":null,"code":"import { autoBatchEnhancer, combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { optionsReducer } from './optionsSlice';\nimport { tooltipReducer } from './tooltipSlice';\nimport { chartDataReducer } from './chartDataSlice';\nimport { chartLayoutReducer } from './layoutSlice';\nimport { mouseClickMiddleware, mouseMoveMiddleware } from './mouseEventsMiddleware';\nimport { reduxDevtoolsJsonStringifyReplacer } from './reduxDevtoolsJsonStringifyReplacer';\nimport { cartesianAxisReducer } from './cartesianAxisSlice';\nimport { graphicalItemsReducer } from './graphicalItemsSlice';\nimport { referenceElementsReducer } from './referenceElementsSlice';\nimport { brushReducer } from './brushSlice';\nimport { legendReducer } from './legendSlice';\nimport { rootPropsReducer } from './rootPropsSlice';\nimport { polarAxisReducer } from './polarAxisSlice';\nimport { polarOptionsReducer } from './polarOptionsSlice';\nimport { keyboardEventsMiddleware } from './keyboardEventsMiddleware';\nimport { externalEventsMiddleware } from './externalEventsMiddleware';\nimport { touchEventMiddleware } from './touchEventsMiddleware';\nimport { errorBarReducer } from './errorBarSlice';\nimport { Global } from '../util/Global';\nvar rootReducer = combineReducers({\n  brush: brushReducer,\n  cartesianAxis: cartesianAxisReducer,\n  chartData: chartDataReducer,\n  errorBars: errorBarReducer,\n  graphicalItems: graphicalItemsReducer,\n  layout: chartLayoutReducer,\n  legend: legendReducer,\n  options: optionsReducer,\n  polarAxis: polarAxisReducer,\n  polarOptions: polarOptionsReducer,\n  referenceElements: referenceElementsReducer,\n  rootProps: rootPropsReducer,\n  tooltip: tooltipReducer\n});\nexport var createRechartsStore = function createRechartsStore(preloadedState) {\n  var chartName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Chart';\n  return configureStore({\n    reducer: rootReducer,\n    // redux-toolkit v1 types are unhappy with the preloadedState type. Remove the `as any` when bumping to v2\n    preloadedState: preloadedState,\n    // @ts-expect-error redux-toolkit v1 types are unhappy with the middleware array. Remove this comment when bumping to v2\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      serializableCheck: false\n    }).concat([mouseClickMiddleware.middleware, mouseMoveMiddleware.middleware, keyboardEventsMiddleware.middleware, externalEventsMiddleware.middleware, touchEventMiddleware.middleware]),\n    /*\r\n     * I can't find out how to satisfy typescript here.\r\n     * We return `EnhancerArray<[StoreEnhancer<{}, {}>, StoreEnhancer]>` from this function,\r\n     * but the types say we should return `EnhancerArray<StoreEnhancer<{}, {}>`.\r\n     * Looks like it's badly inferred generics, but it won't allow me to provide the correct type manually either.\r\n     * So let's just ignore the error for now.\r\n     */\n    // @ts-expect-error mismatched generics\n    enhancers: getDefaultEnhancers => {\n      var enhancers = getDefaultEnhancers;\n      if (typeof getDefaultEnhancers === 'function') {\n        /*\r\n         * In RTK v2 this is always a function, but in v1 it is an array.\r\n         * Because we have @types/redux-toolkit v1 as a dependency, typescript is going to flag this as an error.\r\n         * We support both RTK v1 and v2, so we need to do this check.\r\n         * https://redux-toolkit.js.org/usage/migrating-rtk-2#configurestoreenhancers-must-be-a-callback\r\n         */\n        // @ts-expect-error RTK v2 behaviour on RTK v1 types\n        enhancers = getDefaultEnhancers();\n      }\n      return enhancers.concat(autoBatchEnhancer({\n        type: 'raf'\n      }));\n    },\n    devTools: Global.devToolsEnabled && {\n      serialize: {\n        replacer: reduxDevtoolsJsonStringifyReplacer\n      },\n      name: \"recharts-\".concat(chartName)\n    }\n  });\n};","map":{"version":3,"names":["autoBatchEnhancer","combineReducers","configureStore","optionsReducer","tooltipReducer","chartDataReducer","chartLayoutReducer","mouseClickMiddleware","mouseMoveMiddleware","reduxDevtoolsJsonStringifyReplacer","cartesianAxisReducer","graphicalItemsReducer","referenceElementsReducer","brushReducer","legendReducer","rootPropsReducer","polarAxisReducer","polarOptionsReducer","keyboardEventsMiddleware","externalEventsMiddleware","touchEventMiddleware","errorBarReducer","Global","rootReducer","brush","cartesianAxis","chartData","errorBars","graphicalItems","layout","legend","options","polarAxis","polarOptions","referenceElements","rootProps","tooltip","createRechartsStore","preloadedState","chartName","arguments","length","undefined","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","enhancers","getDefaultEnhancers","type","devTools","devToolsEnabled","serialize","replacer","name"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/recharts/es6/state/store.js"],"sourcesContent":["import { autoBatchEnhancer, combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { optionsReducer } from './optionsSlice';\r\nimport { tooltipReducer } from './tooltipSlice';\r\nimport { chartDataReducer } from './chartDataSlice';\r\nimport { chartLayoutReducer } from './layoutSlice';\r\nimport { mouseClickMiddleware, mouseMoveMiddleware } from './mouseEventsMiddleware';\r\nimport { reduxDevtoolsJsonStringifyReplacer } from './reduxDevtoolsJsonStringifyReplacer';\r\nimport { cartesianAxisReducer } from './cartesianAxisSlice';\r\nimport { graphicalItemsReducer } from './graphicalItemsSlice';\r\nimport { referenceElementsReducer } from './referenceElementsSlice';\r\nimport { brushReducer } from './brushSlice';\r\nimport { legendReducer } from './legendSlice';\r\nimport { rootPropsReducer } from './rootPropsSlice';\r\nimport { polarAxisReducer } from './polarAxisSlice';\r\nimport { polarOptionsReducer } from './polarOptionsSlice';\r\nimport { keyboardEventsMiddleware } from './keyboardEventsMiddleware';\r\nimport { externalEventsMiddleware } from './externalEventsMiddleware';\r\nimport { touchEventMiddleware } from './touchEventsMiddleware';\r\nimport { errorBarReducer } from './errorBarSlice';\r\nimport { Global } from '../util/Global';\r\nvar rootReducer = combineReducers({\r\n  brush: brushReducer,\r\n  cartesianAxis: cartesianAxisReducer,\r\n  chartData: chartDataReducer,\r\n  errorBars: errorBarReducer,\r\n  graphicalItems: graphicalItemsReducer,\r\n  layout: chartLayoutReducer,\r\n  legend: legendReducer,\r\n  options: optionsReducer,\r\n  polarAxis: polarAxisReducer,\r\n  polarOptions: polarOptionsReducer,\r\n  referenceElements: referenceElementsReducer,\r\n  rootProps: rootPropsReducer,\r\n  tooltip: tooltipReducer\r\n});\r\nexport var createRechartsStore = function createRechartsStore(preloadedState) {\r\n  var chartName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Chart';\r\n  return configureStore({\r\n    reducer: rootReducer,\r\n    // redux-toolkit v1 types are unhappy with the preloadedState type. Remove the `as any` when bumping to v2\r\n    preloadedState: preloadedState,\r\n    // @ts-expect-error redux-toolkit v1 types are unhappy with the middleware array. Remove this comment when bumping to v2\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\r\n      serializableCheck: false\r\n    }).concat([mouseClickMiddleware.middleware, mouseMoveMiddleware.middleware, keyboardEventsMiddleware.middleware, externalEventsMiddleware.middleware, touchEventMiddleware.middleware]),\r\n    /*\r\n     * I can't find out how to satisfy typescript here.\r\n     * We return `EnhancerArray<[StoreEnhancer<{}, {}>, StoreEnhancer]>` from this function,\r\n     * but the types say we should return `EnhancerArray<StoreEnhancer<{}, {}>`.\r\n     * Looks like it's badly inferred generics, but it won't allow me to provide the correct type manually either.\r\n     * So let's just ignore the error for now.\r\n     */\r\n    // @ts-expect-error mismatched generics\r\n    enhancers: getDefaultEnhancers => {\r\n      var enhancers = getDefaultEnhancers;\r\n      if (typeof getDefaultEnhancers === 'function') {\r\n        /*\r\n         * In RTK v2 this is always a function, but in v1 it is an array.\r\n         * Because we have @types/redux-toolkit v1 as a dependency, typescript is going to flag this as an error.\r\n         * We support both RTK v1 and v2, so we need to do this check.\r\n         * https://redux-toolkit.js.org/usage/migrating-rtk-2#configurestoreenhancers-must-be-a-callback\r\n         */\r\n        // @ts-expect-error RTK v2 behaviour on RTK v1 types\r\n        enhancers = getDefaultEnhancers();\r\n      }\r\n      return enhancers.concat(autoBatchEnhancer({\r\n        type: 'raf'\r\n      }));\r\n    },\r\n    devTools: Global.devToolsEnabled && {\r\n      serialize: {\r\n        replacer: reduxDevtoolsJsonStringifyReplacer\r\n      },\r\n      name: \"recharts-\".concat(chartName)\r\n    }\r\n  });\r\n};"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AACrF,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,oBAAoB,EAAEC,mBAAmB,QAAQ,yBAAyB;AACnF,SAASC,kCAAkC,QAAQ,sCAAsC;AACzF,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,wBAAwB,QAAQ,0BAA0B;AACnE,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,IAAIC,WAAW,GAAGtB,eAAe,CAAC;EAChCuB,KAAK,EAAEX,YAAY;EACnBY,aAAa,EAAEf,oBAAoB;EACnCgB,SAAS,EAAErB,gBAAgB;EAC3BsB,SAAS,EAAEN,eAAe;EAC1BO,cAAc,EAAEjB,qBAAqB;EACrCkB,MAAM,EAAEvB,kBAAkB;EAC1BwB,MAAM,EAAEhB,aAAa;EACrBiB,OAAO,EAAE5B,cAAc;EACvB6B,SAAS,EAAEhB,gBAAgB;EAC3BiB,YAAY,EAAEhB,mBAAmB;EACjCiB,iBAAiB,EAAEtB,wBAAwB;EAC3CuB,SAAS,EAAEpB,gBAAgB;EAC3BqB,OAAO,EAAEhC;AACX,CAAC,CAAC;AACF,OAAO,IAAIiC,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,cAAc,EAAE;EAC5E,IAAIC,SAAS,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO;EAC3F,OAAOtC,cAAc,CAAC;IACpByC,OAAO,EAAEpB,WAAW;IACpB;IACAe,cAAc,EAAEA,cAAc;IAC9B;IACAM,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,CAAC;MACvDC,iBAAiB,EAAE;IACrB,CAAC,CAAC,CAACC,MAAM,CAAC,CAACxC,oBAAoB,CAACqC,UAAU,EAAEpC,mBAAmB,CAACoC,UAAU,EAAE1B,wBAAwB,CAAC0B,UAAU,EAAEzB,wBAAwB,CAACyB,UAAU,EAAExB,oBAAoB,CAACwB,UAAU,CAAC,CAAC;IACvL;AACJ;AACA;AACA;AACA;AACA;AACA;IACI;IACAI,SAAS,EAAEC,mBAAmB,IAAI;MAChC,IAAID,SAAS,GAAGC,mBAAmB;MACnC,IAAI,OAAOA,mBAAmB,KAAK,UAAU,EAAE;QAC7C;AACR;AACA;AACA;AACA;AACA;QACQ;QACAD,SAAS,GAAGC,mBAAmB,CAAC,CAAC;MACnC;MACA,OAAOD,SAAS,CAACD,MAAM,CAAC/C,iBAAiB,CAAC;QACxCkD,IAAI,EAAE;MACR,CAAC,CAAC,CAAC;IACL,CAAC;IACDC,QAAQ,EAAE7B,MAAM,CAAC8B,eAAe,IAAI;MAClCC,SAAS,EAAE;QACTC,QAAQ,EAAE7C;MACZ,CAAC;MACD8C,IAAI,EAAE,WAAW,CAACR,MAAM,CAACR,SAAS;IACpC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}