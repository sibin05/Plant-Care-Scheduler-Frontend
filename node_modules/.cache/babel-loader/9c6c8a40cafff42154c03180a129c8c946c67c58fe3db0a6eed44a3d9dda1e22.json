{"ast":null,"code":"import _objectSpread from\"C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{login}from'../../services/authService';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminLogin=()=>{const[credentials,setCredentials]=useState({username:'',password:''});const[error,setError]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();try{var _response$user;const response=await login(credentials);// Check if user is admin\nif(((_response$user=response.user)===null||_response$user===void 0?void 0:_response$user.role)==='ADMIN'){navigate('/dashboard');}else{setError('Admin access required');}}catch(err){setError(err.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-login\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Username\",value:credentials.username,onChange:e=>setCredentials(_objectSpread(_objectSpread({},credentials),{},{username:e.target.value})),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:credentials.password,onChange:e=>setCredentials(_objectSpread(_objectSpread({},credentials),{},{password:e.target.value})),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login as Admin\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]});};export default AdminLogin;","map":{"version":3,"names":["React","useState","login","useNavigate","jsx","_jsx","jsxs","_jsxs","AdminLogin","credentials","setCredentials","username","password","error","setError","navigate","handleSubmit","e","preventDefault","_response$user","response","user","role","err","message","className","children","onSubmit","type","placeholder","value","onChange","_objectSpread","target","required"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/components/admin/AdminLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { login } from '../../services/authService';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminLogin = () => {\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await login(credentials);\n      // Check if user is admin\n      if (response.user?.role === 'ADMIN') {\n        navigate('/dashboard');\n      } else {\n        setError('Admin access required');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"admin-login\">\n      <h2>Admin Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={credentials.username}\n          onChange={(e) => setCredentials({...credentials, username: e.target.value})}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={(e) => setCredentials({...credentials, password: e.target.value})}\n          required\n        />\n        <button type=\"submit\">Login as Admin</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default AdminLogin;"],"mappings":"yJAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,KAAK,KAAQ,4BAA4B,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,CAAEU,QAAQ,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAC9E,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAc,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,KAAAC,cAAA,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACO,WAAW,CAAC,CACzC;AACA,GAAI,EAAAU,cAAA,CAAAC,QAAQ,CAACC,IAAI,UAAAF,cAAA,iBAAbA,cAAA,CAAeG,IAAI,IAAK,OAAO,CAAE,CACnCP,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,IAAM,CACLD,QAAQ,CAAC,uBAAuB,CAAC,CACnC,CACF,CAAE,MAAOS,GAAG,CAAE,CACZT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC,CACvB,CACF,CAAC,CAED,mBACEjB,KAAA,QAAKkB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BrB,IAAA,OAAAqB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBnB,KAAA,SAAMoB,QAAQ,CAAEX,YAAa,CAAAU,QAAA,eAC3BrB,IAAA,UACEuB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAErB,WAAW,CAACE,QAAS,CAC5BoB,QAAQ,CAAGd,CAAC,EAAKP,cAAc,CAAAsB,aAAA,CAAAA,aAAA,IAAKvB,WAAW,MAAEE,QAAQ,CAAEM,CAAC,CAACgB,MAAM,CAACH,KAAK,EAAC,CAAE,CAC5EI,QAAQ,MACT,CAAC,cACF7B,IAAA,UACEuB,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAErB,WAAW,CAACG,QAAS,CAC5BmB,QAAQ,CAAGd,CAAC,EAAKP,cAAc,CAAAsB,aAAA,CAAAA,aAAA,IAAKvB,WAAW,MAAEG,QAAQ,CAAEK,CAAC,CAACgB,MAAM,CAACH,KAAK,EAAC,CAAE,CAC5EI,QAAQ,MACT,CAAC,cACF7B,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,gBAAc,CAAQ,CAAC,EACzC,CAAC,CACNb,KAAK,eAAIR,IAAA,MAAGoB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAEb,KAAK,CAAI,CAAC,EACvC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}