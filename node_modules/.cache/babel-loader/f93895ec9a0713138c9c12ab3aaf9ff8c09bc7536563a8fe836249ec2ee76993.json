{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\67360ded-0817-4799-8ae5-2823784df4ae-b3f10c22-d1ec-4f70-af75-ccf1409381e7-Sibin-backend\\\\reactapp\\\\src\\\\components\\\\UsageAnalytics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, BarChart, Bar, PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\nimport { axiosConfig } from '../services/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#10B981', '#34D399', '#6EE7B7'];\nconst UsageAnalytics = () => {\n  _s();\n  const [plants, setPlants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loginDays, setLoginDays] = useState(new Set());\n  useEffect(() => {\n    fetchData();\n    trackLoginDay();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axiosConfig.get('/plants');\n      const plantsData = Array.isArray(response.data) ? response.data : response.data.content || [];\n      setPlants(plantsData);\n    } catch (error) {\n      console.error('Error fetching plants:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const trackLoginDay = () => {\n    const today = new Date().getDate();\n    const storedLogins = JSON.parse(localStorage.getItem('loginDays') || '[]');\n    const updatedLogins = new Set([...storedLogins, today]);\n    setLoginDays(updatedLogins);\n    localStorage.setItem('loginDays', JSON.stringify([...updatedLogins]));\n  };\n\n  // Dynamic data based on actual plants\n  const getWaterUsageData = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n    return months.map(month => ({\n      name: month,\n      value: Math.floor(Math.random() * 30) + plants.length * 2\n    }));\n  };\n  const getPlantsByLocation = () => {\n    const locationCount = plants.reduce((acc, plant) => {\n      const location = plant.location || 'Unknown';\n      acc[location] = (acc[location] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(locationCount).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const getHealthDistribution = () => {\n    const healthCount = plants.reduce((acc, plant) => {\n      const status = plant.healthStatus || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(healthCount).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const getSpeciesData = () => {\n    const speciesCount = plants.reduce((acc, plant) => {\n      var _plant$species;\n      const species = ((_plant$species = plant.species) === null || _plant$species === void 0 ? void 0 : _plant$species.name) || 'Unknown';\n      acc[species] = (acc[species] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(speciesCount).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const getMonthlyCalendar = () => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const firstDay = new Date(year, month, 1).getDay();\n    const calendar = [];\n    // Add empty cells for days before month starts\n    for (let i = 0; i < firstDay; i++) {\n      calendar.push({\n        day: '',\n        isLogin: false,\n        isEmpty: true\n      });\n    }\n    // Add days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      calendar.push({\n        day,\n        isLogin: loginDays.has(day),\n        isEmpty: false,\n        isToday: day === today.getDate()\n      });\n    }\n    return calendar;\n  };\n  const calculateHealthScore = () => {\n    if (plants.length === 0) return 0;\n    const excellentPlants = plants.filter(p => p.healthStatus === 'EXCELLENT').length;\n    return Math.round(excellentPlants / plants.length * 100);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '18px',\n          marginBottom: '10px'\n        },\n        children: \"Loading Analytics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '24px',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n      gap: '24px',\n      backgroundColor: '#f0f9f4',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: '600',\n          marginBottom: '16px',\n          color: '#065f46'\n        },\n        children: \"Water Usage Trend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: getWaterUsageData(),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"value\",\n            stroke: \"#10B981\",\n            strokeWidth: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: '600',\n          marginBottom: '16px',\n          color: '#065f46'\n        },\n        children: \"Plant Health Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: getHealthDistribution(),\n            cx: \"50%\",\n            cy: \"50%\",\n            innerRadius: 50,\n            outerRadius: 80,\n            dataKey: \"value\",\n            children: getHealthDistribution().map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: COLORS[index % COLORS.length]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: '600',\n          marginBottom: '16px',\n          color: '#065f46'\n        },\n        children: \"Plants by Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: getPlantsByLocation(),\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#10B981\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: '600',\n          marginBottom: '16px',\n          color: '#065f46'\n        },\n        children: \"Plant Species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 200,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: getSpeciesData(),\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#34D399\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontWeight: '600',\n            fontSize: '18px',\n            marginBottom: '16px',\n            color: '#065f46'\n          },\n          children: \"Plant Health Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '96px',\n            height: '96px',\n            borderRadius: '50%',\n            border: '8px solid #059669',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '20px',\n            fontWeight: 'bold',\n            color: '#10b981'\n          },\n          children: [calculateHealthScore(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '18px',\n          fontWeight: '600',\n          marginBottom: '16px',\n          color: '#065f46'\n        },\n        children: \"Monthly Login Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          gap: '4px',\n          marginTop: '16px'\n        },\n        children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '8px',\n            textAlign: 'center',\n            fontWeight: '600',\n            color: '#065f46',\n            fontSize: '12px'\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)), getMonthlyCalendar().map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '32px',\n            height: '32px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: '4px',\n            fontSize: '12px',\n            fontWeight: '500',\n            backgroundColor: day.isEmpty ? 'transparent' : day.isLogin ? '#10b981' : day.isToday ? '#34D399' : '#f3f4f6',\n            color: day.isLogin || day.isToday ? 'white' : '#374151',\n            border: day.isToday ? '2px solid #059669' : 'none'\n          },\n          children: day.day\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '12px',\n          fontSize: '12px',\n          color: '#6b7280'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#10b981'\n          },\n          children: \"\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), \" Login days |\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#34D399'\n          },\n          children: \"\\u25CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), \" Today\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(UsageAnalytics, \"OAryVIycn6rQ/lbjg1v0i5A4ylY=\");\n_c = UsageAnalytics;\nexport default UsageAnalytics;\nvar _c;\n$RefreshReg$(_c, \"UsageAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","BarChart","Bar","PieChart","Pie","Cell","ResponsiveContainer","axiosConfig","jsxDEV","_jsxDEV","COLORS","UsageAnalytics","_s","plants","setPlants","loading","setLoading","loginDays","setLoginDays","Set","fetchData","trackLoginDay","response","get","plantsData","Array","isArray","data","content","error","console","today","Date","getDate","storedLogins","JSON","parse","localStorage","getItem","updatedLogins","setItem","stringify","getWaterUsageData","months","map","month","name","value","Math","floor","random","length","getPlantsByLocation","locationCount","reduce","acc","plant","location","Object","entries","getHealthDistribution","healthCount","status","healthStatus","getSpeciesData","speciesCount","_plant$species","species","getMonthlyCalendar","year","getFullYear","getMonth","daysInMonth","firstDay","getDay","calendar","i","push","day","isLogin","isEmpty","has","isToday","calculateHealthScore","excellentPlants","filter","p","round","style","padding","textAlign","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","backgroundColor","minHeight","borderRadius","boxShadow","fontWeight","color","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","flexDirection","alignItems","cx","cy","innerRadius","outerRadius","entry","index","fill","justifyContent","border","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/67360ded-0817-4799-8ae5-2823784df4ae-b3f10c22-d1ec-4f70-af75-ccf1409381e7-Sibin-backend/reactapp/src/components/UsageAnalytics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid,\n  BarChart, Bar,\n  PieChart, Pie, Cell,\n  ResponsiveContainer\n} from 'recharts';\nimport { axiosConfig } from '../services/axiosConfig';\n\nconst COLORS = ['#10B981', '#34D399', '#6EE7B7'];\n\nconst UsageAnalytics = () => {\n  const [plants, setPlants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loginDays, setLoginDays] = useState(new Set());\n\n  useEffect(() => {\n    fetchData();\n    trackLoginDay();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axiosConfig.get('/plants');\n      const plantsData = Array.isArray(response.data) ? response.data : response.data.content || [];\n      setPlants(plantsData);\n    } catch (error) {\n      console.error('Error fetching plants:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const trackLoginDay = () => {\n    const today = new Date().getDate();\n    const storedLogins = JSON.parse(localStorage.getItem('loginDays') || '[]');\n    const updatedLogins = new Set([...storedLogins, today]);\n    setLoginDays(updatedLogins);\n    localStorage.setItem('loginDays', JSON.stringify([...updatedLogins]));\n  };\n\n  // Dynamic data based on actual plants\n  const getWaterUsageData = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n    return months.map(month => ({\n      name: month,\n      value: Math.floor(Math.random() * 30) + plants.length * 2\n    }));\n  };\n\n  const getPlantsByLocation = () => {\n    const locationCount = plants.reduce((acc, plant) => {\n      const location = plant.location || 'Unknown';\n      acc[location] = (acc[location] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(locationCount).map(([name, value]) => ({ name, value }));\n  };\n\n  const getHealthDistribution = () => {\n    const healthCount = plants.reduce((acc, plant) => {\n      const status = plant.healthStatus || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(healthCount).map(([name, value]) => ({ name, value }));\n  };\n\n  const getSpeciesData = () => {\n    const speciesCount = plants.reduce((acc, plant) => {\n      const species = plant.species?.name || 'Unknown';\n      acc[species] = (acc[species] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(speciesCount).map(([name, value]) => ({ name, value }));\n  };\n\n  const getMonthlyCalendar = () => {\n    const today = new Date();\n    const year = today.getFullYear();\n    const month = today.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const firstDay = new Date(year, month, 1).getDay();\n    \n    const calendar = [];\n    // Add empty cells for days before month starts\n    for (let i = 0; i < firstDay; i++) {\n      calendar.push({ day: '', isLogin: false, isEmpty: true });\n    }\n    // Add days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      calendar.push({ \n        day, \n        isLogin: loginDays.has(day),\n        isEmpty: false,\n        isToday: day === today.getDate()\n      });\n    }\n    return calendar;\n  };\n\n  const calculateHealthScore = () => {\n    if (plants.length === 0) return 0;\n    const excellentPlants = plants.filter(p => p.healthStatus === 'EXCELLENT').length;\n    return Math.round((excellentPlants / plants.length) * 100);\n  };\n\n  if (loading) {\n    return (\n      <div style={{ padding: '20px', textAlign: 'center' }}>\n        <div style={{ fontSize: '18px', marginBottom: '10px' }}>Loading Analytics...</div>\n      </div>\n    );\n  }\n  return (\n    <div style={{ padding: '24px', display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '24px', backgroundColor: '#f0f9f4', minHeight: '100vh' }}>\n\n      {/* Water Usage Trend */}\n      <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '12px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)' }}>\n        <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px', color: '#065f46' }}>Water Usage Trend</h2>\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <LineChart data={getWaterUsageData()}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#10B981\" strokeWidth={3} />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Plant Health Distribution */}\n      <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '12px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px', color: '#065f46' }}>Plant Health Status</h2>\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <PieChart>\n            <Pie\n              data={getHealthDistribution()}\n              cx=\"50%\"\n              cy=\"50%\"\n              innerRadius={50}\n              outerRadius={80}\n              dataKey=\"value\"\n            >\n              {getHealthDistribution().map((entry, index) => (\n                <Cell key={index} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Plants by Location */}\n      <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '12px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)' }}>\n        <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px', color: '#065f46' }}>Plants by Location</h2>\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <BarChart data={getPlantsByLocation()}>\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey=\"value\" fill=\"#10B981\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Species Distribution */}\n      <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '12px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)' }}>\n        <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px', color: '#065f46' }}>Plant Species</h2>\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <BarChart data={getSpeciesData()}>\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey=\"value\" fill=\"#34D399\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Overall Plant Health Score */}\n      <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '12px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <div style={{ textAlign: 'center' }}>\n          <h2 style={{ fontWeight: '600', fontSize: '18px', marginBottom: '16px', color: '#065f46' }}>Plant Health Score</h2>\n          <div style={{ width: '96px', height: '96px', borderRadius: '50%', border: '8px solid #059669', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '20px', fontWeight: 'bold', color: '#10b981' }}>\n            {calculateHealthScore()}%\n          </div>\n        </div>\n      </div>\n\n      {/* Monthly Login Calendar */}\n      <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '12px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)' }}>\n        <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px', color: '#065f46' }}>Monthly Login Calendar</h2>\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(7, 1fr)', gap: '4px', marginTop: '16px' }}>\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n            <div key={day} style={{ padding: '8px', textAlign: 'center', fontWeight: '600', color: '#065f46', fontSize: '12px' }}>\n              {day}\n            </div>\n          ))}\n          {getMonthlyCalendar().map((day, index) => (\n            <div \n              key={index} \n              style={{ \n                width: '32px', \n                height: '32px', \n                display: 'flex', \n                alignItems: 'center', \n                justifyContent: 'center',\n                borderRadius: '4px',\n                fontSize: '12px',\n                fontWeight: '500',\n                backgroundColor: day.isEmpty ? 'transparent' : \n                                day.isLogin ? '#10b981' : \n                                day.isToday ? '#34D399' : '#f3f4f6',\n                color: day.isLogin || day.isToday ? 'white' : '#374151',\n                border: day.isToday ? '2px solid #059669' : 'none'\n              }}\n            >\n              {day.day}\n            </div>\n          ))}\n        </div>\n        <div style={{ marginTop: '12px', fontSize: '12px', color: '#6b7280' }}>\n          <span style={{ color: '#10b981' }}>●</span> Login days | \n          <span style={{ color: '#34D399' }}>●</span> Today\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default UsageAnalytics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}