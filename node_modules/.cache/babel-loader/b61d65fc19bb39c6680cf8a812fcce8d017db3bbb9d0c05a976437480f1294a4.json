{"ast":null,"code":"import { axiosConfig } from './axiosConfig';\nimport { canUpdate, canDelete } from '../utils/permissions';\nexport const getHealthRecords = plantId => {\n  const url = plantId ? `/health-records?plantId=${plantId}` : '/health-records';\n  return axiosConfig.get(url);\n};\nexport const createHealthRecord = (data, userRole) => {\n  if (!canUpdate(userRole)) {\n    throw new Error('Insufficient permissions to create health records');\n  }\n  return axiosConfig.post('/health-records', data);\n};\nexport const updateHealthRecord = (id, data, userRole) => {\n  if (!canUpdate(userRole)) {\n    throw new Error('Insufficient permissions to update health records');\n  }\n  return axiosConfig.put(`/health-records/${id}`, data);\n};\nexport const deleteHealthRecord = (id, userRole) => {\n  if (!canDelete(userRole)) {\n    throw new Error('Insufficient permissions to delete health records');\n  }\n  return axiosConfig.delete(`/health-records/${id}`);\n};\nexport const getAllHealthRecords = () => {\n  return axiosConfig.get('/health-records');\n};","map":{"version":3,"names":["axiosConfig","canUpdate","canDelete","getHealthRecords","plantId","url","get","createHealthRecord","data","userRole","Error","post","updateHealthRecord","id","put","deleteHealthRecord","delete","getAllHealthRecords"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/services/healthMonitorService.js"],"sourcesContent":["import { axiosConfig } from './axiosConfig';\r\nimport { canUpdate, canDelete } from '../utils/permissions';\r\n\r\nexport const getHealthRecords = (plantId) => {\r\n  const url = plantId ? `/health-records?plantId=${plantId}` : '/health-records';\r\n  return axiosConfig.get(url);\r\n};\r\n\r\nexport const createHealthRecord = (data, userRole) => {\r\n  if (!canUpdate(userRole)) {\r\n    throw new Error('Insufficient permissions to create health records');\r\n  }\r\n  return axiosConfig.post('/health-records', data);\r\n};\r\n\r\nexport const updateHealthRecord = (id, data, userRole) => {\r\n  if (!canUpdate(userRole)) {\r\n    throw new Error('Insufficient permissions to update health records');\r\n  }\r\n  return axiosConfig.put(`/health-records/${id}`, data);\r\n};\r\n\r\nexport const deleteHealthRecord = (id, userRole) => {\r\n  if (!canDelete(userRole)) {\r\n    throw new Error('Insufficient permissions to delete health records');\r\n  }\r\n  return axiosConfig.delete(`/health-records/${id}`);\r\n};\r\n\r\nexport const getAllHealthRecords = () => {\r\n  return axiosConfig.get('/health-records');\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAe;AAC3C,SAASC,SAAS,EAAEC,SAAS,QAAQ,sBAAsB;AAE3D,OAAO,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;EAC3C,MAAMC,GAAG,GAAGD,OAAO,GAAG,2BAA2BA,OAAO,EAAE,GAAG,iBAAiB;EAC9E,OAAOJ,WAAW,CAACM,GAAG,CAACD,GAAG,CAAC;AAC7B,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EACpD,IAAI,CAACR,SAAS,CAACQ,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOV,WAAW,CAACW,IAAI,CAAC,iBAAiB,EAAEH,IAAI,CAAC;AAClD,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAGA,CAACC,EAAE,EAAEL,IAAI,EAAEC,QAAQ,KAAK;EACxD,IAAI,CAACR,SAAS,CAACQ,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOV,WAAW,CAACc,GAAG,CAAC,mBAAmBD,EAAE,EAAE,EAAEL,IAAI,CAAC;AACvD,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAGA,CAACF,EAAE,EAAEJ,QAAQ,KAAK;EAClD,IAAI,CAACP,SAAS,CAACO,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOV,WAAW,CAACgB,MAAM,CAAC,mBAAmBH,EAAE,EAAE,CAAC;AACpD,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;EACvC,OAAOjB,WAAW,CAACM,GAAG,CAAC,iBAAiB,CAAC;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}