{"ast":null,"code":"import React from\"react\";import{BrowserRouter as Router,Routes,Route,Navigate,useParams}from\"react-router-dom\";// Auth\nimport LoginForm from\"./components/auth/LoginForm\";import RegisterForm from\"./components/auth/RegisterForm\";// Plants\nimport PlantList from\"./components/plants/PlantList\";// Care Tasks\nimport CareTasks from\"./components/care/CareTasks\";// Environment\nimport EnvironmentDashboard from\"./components/environment/EnvironmentDashboard\";// Health\nimport HealthMonitor from\"./components/health/HealthMonitor\";import ForgotPasswordPage from\"./components/auth/ForgotPasswordPage\";import Dashboard from\"./components/Dashboard\";// Landing\nimport LandingPage from\"./components/landing/LandingPage\";import Contact from\"./components/Contact\";import Features from\"./components/Features\";import About from\"./components/About\";import NotificationSystem from\"./components/NotificationSystem\";import AdminDashboard from\"./components/admin/AdminDashboard\";import AdminLogin from\"./components/admin/AdminLogin\";import AdminGuide from\"./components/admin/AdminGuide\";// Simple protected route wrapper\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children}=_ref;const token=localStorage.getItem(\"accessToken\");return token?children:/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};// Wrapper components for dynamic routes\nconst EnvironmentWrapper=()=>{const{plantId}=useParams();return/*#__PURE__*/_jsx(EnvironmentDashboard,{plantId:plantId});};const HealthWrapper=()=>{const{plantId}=useParams();return/*#__PURE__*/_jsx(HealthMonitor,{plantId:plantId});};const App=()=>{return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(NotificationSystem,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LandingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/contact\",element:/*#__PURE__*/_jsx(Contact,{})}),/*#__PURE__*/_jsx(Route,{path:\"/features\",element:/*#__PURE__*/_jsx(Features,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginForm,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(RegisterForm,{})}),/*#__PURE__*/_jsx(Route,{path:\"/forgot-password\",element:/*#__PURE__*/_jsx(ForgotPasswordPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin-guide\",element:/*#__PURE__*/_jsx(AdminGuide,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin-login\",element:/*#__PURE__*/_jsx(AdminLogin,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(AdminDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/plants\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(PlantList,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/care-tasks\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(CareTasks,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/environment/:plantId\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(EnvironmentWrapper,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/health/:plantId\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(HealthWrapper,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})]});};export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","useParams","LoginForm","RegisterForm","PlantList","CareTasks","EnvironmentDashboard","HealthMonitor","ForgotPasswordPage","Dashboard","LandingPage","Contact","Features","About","NotificationSystem","AdminDashboard","AdminLogin","AdminGuide","jsx","_jsx","jsxs","_jsxs","PrivateRoute","_ref","children","token","localStorage","getItem","to","EnvironmentWrapper","plantId","HealthWrapper","App","path","element"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useParams } from \"react-router-dom\";\r\n\r\n// Auth\r\nimport LoginForm from \"./components/auth/LoginForm\";\r\nimport RegisterForm from \"./components/auth/RegisterForm\";\r\n\r\n// Plants\r\nimport PlantList from \"./components/plants/PlantList\";\r\n\r\n// Care Tasks\r\nimport CareTasks from \"./components/care/CareTasks\";\r\n\r\n// Environment\r\nimport EnvironmentDashboard from \"./components/environment/EnvironmentDashboard\";\r\n\r\n// Health\r\nimport HealthMonitor from \"./components/health/HealthMonitor\";\r\nimport ForgotPasswordPage from \"./components/auth/ForgotPasswordPage\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\n// Landing\r\nimport LandingPage from \"./components/landing/LandingPage\";\r\nimport Contact from \"./components/Contact\";\r\nimport Features from \"./components/Features\";\r\nimport About from \"./components/About\";\r\nimport NotificationSystem from \"./components/NotificationSystem\";\r\nimport AdminDashboard from \"./components/admin/AdminDashboard\";\r\nimport AdminLogin from \"./components/admin/AdminLogin\";\r\nimport AdminGuide from \"./components/admin/AdminGuide\";\r\n\r\n// Simple protected route wrapper\r\nconst PrivateRoute = ({ children }) => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  return token ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\n// Wrapper components for dynamic routes\r\nconst EnvironmentWrapper = () => {\r\n  const { plantId } = useParams();\r\n  return <EnvironmentDashboard plantId={plantId} />;\r\n};\r\n\r\nconst HealthWrapper = () => {\r\n  const { plantId } = useParams();\r\n  return <HealthMonitor plantId={plantId} />;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <NotificationSystem />\r\n      <Routes>\r\n        {/* Landing */}\r\n        <Route path=\"/\" element={<LandingPage />} />\r\n        <Route path=\"/contact\" element={<Contact />} />\r\n        <Route path=\"/features\" element={<Features />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n        \r\n        {/* Auth */}\r\n        <Route path=\"/login\" element={<LoginForm />} />\r\n        <Route path=\"/register\" element={<RegisterForm />} />\r\n        <Route path=\"/forgot-password\" element={<ForgotPasswordPage />} />\r\n\r\n        {/* Dashboard → allow demo access */}\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={<Dashboard/>}\r\n        />\r\n\r\n        {/* Admin Routes */}\r\n        <Route path=\"/admin-guide\" element={<AdminGuide />} />\r\n        <Route path=\"/admin-login\" element={<AdminLogin />} />\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            <PrivateRoute>\r\n              <AdminDashboard />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {/* Plants */}\r\n        <Route\r\n          path=\"/plants\"\r\n          element={\r\n            <PrivateRoute>\r\n              <PlantList />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {/* Care Tasks */}\r\n        <Route\r\n          path=\"/care-tasks\"\r\n          element={\r\n            <PrivateRoute>\r\n              <CareTasks />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {/* Environment */}\r\n        <Route\r\n          path=\"/environment/:plantId\"\r\n          element={\r\n            <PrivateRoute>\r\n              <EnvironmentWrapper />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {/* Health Records */}\r\n        <Route\r\n          path=\"/health/:plantId\"\r\n          element={\r\n            <PrivateRoute>\r\n              <HealthWrapper />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n\r\n        {/* Default → redirect */}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}