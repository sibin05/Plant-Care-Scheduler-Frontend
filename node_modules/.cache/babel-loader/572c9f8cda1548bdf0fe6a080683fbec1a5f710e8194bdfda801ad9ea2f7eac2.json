{"ast":null,"code":"import React,{useState,useEffect}from'react';import PlantCard from'./PlantCard';import*as plantService from'../../services/plantService';import{jsx as _jsx}from\"react/jsx-runtime\";const PlantList=_ref=>{let{refreshTrigger,userRole}=_ref;const[plants,setPlants]=useState([]);const[loading,setLoading]=useState(true);const fetchPlants=()=>{plantService.getPlants().then(res=>{const fetchedPlants=Array.isArray(res.data)?res.data:res.data.content||[];setPlants(fetchedPlants);setLoading(false);}).catch(()=>{setPlants([]);setLoading(false);});};useEffect(()=>{fetchPlants();},[refreshTrigger]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading plants...\"});return/*#__PURE__*/_jsx(\"div\",{className:\"plant-list\",children:plants.map(plant=>/*#__PURE__*/_jsx(PlantCard,{plant:plant,userRole:userRole},plant.id))});};export default PlantList;","map":{"version":3,"names":["React","useState","useEffect","PlantCard","plantService","jsx","_jsx","PlantList","_ref","refreshTrigger","userRole","plants","setPlants","loading","setLoading","fetchPlants","getPlants","then","res","fetchedPlants","Array","isArray","data","content","catch","children","className","map","plant","id"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/components/plants/PlantList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PlantCard from './PlantCard';\r\nimport * as plantService from '../../services/plantService';\r\n\r\nconst PlantList = ({ refreshTrigger, userRole }) => {\r\n  const [plants, setPlants] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchPlants = () => {\r\n    plantService.getPlants()\r\n      .then(res => {\r\n        const fetchedPlants = Array.isArray(res.data) ? res.data : res.data.content || [];\r\n        setPlants(fetchedPlants);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setPlants([]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlants();\r\n  }, [refreshTrigger]);\r\n\r\n  if (loading) return <p>Loading plants...</p>;\r\n\r\n  return (\r\n    <div className=\"plant-list\">\r\n      {plants.map(plant => (\r\n        <PlantCard key={plant.id} plant={plant} userRole={userRole} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlantList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,GAAK,CAAAC,YAAY,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5D,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAkC,IAAjC,CAAEC,cAAc,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC7C,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAc,WAAW,CAAGA,CAAA,GAAM,CACxBX,YAAY,CAACY,SAAS,CAAC,CAAC,CACrBC,IAAI,CAACC,GAAG,EAAI,CACX,KAAM,CAAAC,aAAa,CAAGC,KAAK,CAACC,OAAO,CAACH,GAAG,CAACI,IAAI,CAAC,CAAGJ,GAAG,CAACI,IAAI,CAAGJ,GAAG,CAACI,IAAI,CAACC,OAAO,EAAI,EAAE,CACjFX,SAAS,CAACO,aAAa,CAAC,CACxBL,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACDU,KAAK,CAAC,IAAM,CACXZ,SAAS,CAAC,EAAE,CAAC,CACbE,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAEDZ,SAAS,CAAC,IAAM,CACda,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACN,cAAc,CAAC,CAAC,CAEpB,GAAII,OAAO,CAAE,mBAAOP,IAAA,MAAAmB,QAAA,CAAG,mBAAiB,CAAG,CAAC,CAE5C,mBACEnB,IAAA,QAAKoB,SAAS,CAAC,YAAY,CAAAD,QAAA,CACxBd,MAAM,CAACgB,GAAG,CAACC,KAAK,eACftB,IAAA,CAACH,SAAS,EAAgByB,KAAK,CAAEA,KAAM,CAAClB,QAAQ,CAAEA,QAAS,EAA3CkB,KAAK,CAACC,EAAuC,CAC9D,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}