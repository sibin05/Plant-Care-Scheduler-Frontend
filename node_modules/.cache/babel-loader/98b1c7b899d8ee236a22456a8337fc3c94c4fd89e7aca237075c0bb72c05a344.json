{"ast":null,"code":"import { createSelector } from 'reselect';\n/**\r\n * This selector always returns the data with the indexes set by a Brush.\r\n * Trouble is, that might or might not be what you want.\r\n *\r\n * In charts with Brush, you will sometimes want to select the full range of data, and sometimes the one decided by the Brush\r\n * - even if the Brush is active, the panorama inside the Brush should show the full range of data.\r\n *\r\n * So instead of this selector, consider using either selectChartDataAndAlwaysIgnoreIndexes or selectChartDataWithIndexesIfNotInPanorama\r\n *\r\n * @param state RechartsRootState\r\n * @returns data defined on the chart root element, such as BarChart or ScatterChart\r\n */\nexport var selectChartDataWithIndexes = state => state.chartData;\n\n/**\r\n * This selector will always return the full range of data, ignoring the indexes set by a Brush.\r\n * Useful for when you want to render the full range of data, even if a Brush is active.\r\n * For example: in the Brush panorama, in Legend, in Tooltip.\r\n */\nexport var selectChartDataAndAlwaysIgnoreIndexes = createSelector([selectChartDataWithIndexes], dataState => {\n  var dataEndIndex = dataState.chartData != null ? dataState.chartData.length - 1 : 0;\n  return {\n    chartData: dataState.chartData,\n    computedData: dataState.computedData,\n    dataEndIndex,\n    dataStartIndex: 0\n  };\n});\nexport var selectChartDataWithIndexesIfNotInPanorama = (state, _unused1, _unused2, isPanorama) => {\n  if (isPanorama) {\n    return selectChartDataAndAlwaysIgnoreIndexes(state);\n  }\n  return selectChartDataWithIndexes(state);\n};","map":{"version":3,"names":["createSelector","selectChartDataWithIndexes","state","chartData","selectChartDataAndAlwaysIgnoreIndexes","dataState","dataEndIndex","length","computedData","dataStartIndex","selectChartDataWithIndexesIfNotInPanorama","_unused1","_unused2","isPanorama"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/recharts/es6/state/selectors/dataSelectors.js"],"sourcesContent":["import { createSelector } from 'reselect';\r\n/**\r\n * This selector always returns the data with the indexes set by a Brush.\r\n * Trouble is, that might or might not be what you want.\r\n *\r\n * In charts with Brush, you will sometimes want to select the full range of data, and sometimes the one decided by the Brush\r\n * - even if the Brush is active, the panorama inside the Brush should show the full range of data.\r\n *\r\n * So instead of this selector, consider using either selectChartDataAndAlwaysIgnoreIndexes or selectChartDataWithIndexesIfNotInPanorama\r\n *\r\n * @param state RechartsRootState\r\n * @returns data defined on the chart root element, such as BarChart or ScatterChart\r\n */\r\nexport var selectChartDataWithIndexes = state => state.chartData;\r\n\r\n/**\r\n * This selector will always return the full range of data, ignoring the indexes set by a Brush.\r\n * Useful for when you want to render the full range of data, even if a Brush is active.\r\n * For example: in the Brush panorama, in Legend, in Tooltip.\r\n */\r\nexport var selectChartDataAndAlwaysIgnoreIndexes = createSelector([selectChartDataWithIndexes], dataState => {\r\n  var dataEndIndex = dataState.chartData != null ? dataState.chartData.length - 1 : 0;\r\n  return {\r\n    chartData: dataState.chartData,\r\n    computedData: dataState.computedData,\r\n    dataEndIndex,\r\n    dataStartIndex: 0\r\n  };\r\n});\r\nexport var selectChartDataWithIndexesIfNotInPanorama = (state, _unused1, _unused2, isPanorama) => {\r\n  if (isPanorama) {\r\n    return selectChartDataAndAlwaysIgnoreIndexes(state);\r\n  }\r\n  return selectChartDataWithIndexes(state);\r\n};"],"mappings":"AAAA,SAASA,cAAc,QAAQ,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,0BAA0B,GAAGC,KAAK,IAAIA,KAAK,CAACC,SAAS;;AAEhE;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,qCAAqC,GAAGJ,cAAc,CAAC,CAACC,0BAA0B,CAAC,EAAEI,SAAS,IAAI;EAC3G,IAAIC,YAAY,GAAGD,SAAS,CAACF,SAAS,IAAI,IAAI,GAAGE,SAAS,CAACF,SAAS,CAACI,MAAM,GAAG,CAAC,GAAG,CAAC;EACnF,OAAO;IACLJ,SAAS,EAAEE,SAAS,CAACF,SAAS;IAC9BK,YAAY,EAAEH,SAAS,CAACG,YAAY;IACpCF,YAAY;IACZG,cAAc,EAAE;EAClB,CAAC;AACH,CAAC,CAAC;AACF,OAAO,IAAIC,yCAAyC,GAAGA,CAACR,KAAK,EAAES,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,KAAK;EAChG,IAAIA,UAAU,EAAE;IACd,OAAOT,qCAAqC,CAACF,KAAK,CAAC;EACrD;EACA,OAAOD,0BAA0B,CAACC,KAAK,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}