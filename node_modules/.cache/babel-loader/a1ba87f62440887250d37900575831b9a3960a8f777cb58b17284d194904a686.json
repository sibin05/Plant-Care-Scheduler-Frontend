{"ast":null,"code":"import _objectSpread from\"C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import*as plantService from'../../services/plantService';import{canUpdate}from'../../utils/permissions';import'../../styles/modal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditPlantModal=_ref=>{let{isOpen,onClose,onPlantUpdated,plant,userRole}=_ref;const[formData,setFormData]=useState({nickname:'',location:'',acquisitionDate:'',currentHeightCm:'',currentWidthCm:'',potSize:'',soilType:'',healthStatus:'GOOD',notes:''});useEffect(()=>{if(plant){setFormData({nickname:plant.nickname||'',location:plant.location||'',acquisitionDate:plant.acquisitionDate||'',currentHeightCm:plant.currentHeightCm||'',currentWidthCm:plant.currentWidthCm||'',potSize:plant.potSize||'',soilType:plant.soilType||'',healthStatus:plant.healthStatus||'GOOD',notes:plant.notes||''});}},[plant]);const handleChange=e=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();try{await plantService.updatePlant(plant.id,formData,userRole);alert('Plant updated successfully!');onPlantUpdated();onClose();}catch(error){alert('Failed to update plant');}};if(!isOpen)return null;if(!canUpdate(userRole)){return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Access Denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You don't have permission to edit plants. Contact an administrator for access.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,children:\"Close\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Plant\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nickname\",placeholder:\"Plant Nickname *\",value:formData.nickname,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"location\",placeholder:\"Location\",value:formData.location,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"acquisitionDate\",placeholder:\"Acquisition Date\",value:formData.acquisitionDate,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"currentHeightCm\",placeholder:\"Height (cm)\",value:formData.currentHeightCm,onChange:handleChange,step:\"0.1\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"currentWidthCm\",placeholder:\"Width (cm)\",value:formData.currentWidthCm,onChange:handleChange,step:\"0.1\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"potSize\",placeholder:\"Pot Size\",value:formData.potSize,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"soilType\",placeholder:\"Soil Type\",value:formData.soilType,onChange:handleChange}),/*#__PURE__*/_jsxs(\"select\",{name:\"healthStatus\",value:formData.healthStatus,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"EXCELLENT\",children:\"Excellent\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GOOD\",children:\"Good\"}),/*#__PURE__*/_jsx(\"option\",{value:\"FAIR\",children:\"Fair\"}),/*#__PURE__*/_jsx(\"option\",{value:\"POOR\",children:\"Poor\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CRITICAL\",children:\"Critical\"})]}),/*#__PURE__*/_jsx(\"textarea\",{name:\"notes\",placeholder:\"Notes\",value:formData.notes,onChange:handleChange,rows:\"3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update Plant\"})]})]})]})});};export default EditPlantModal;","map":{"version":3,"names":["React","useState","useEffect","plantService","canUpdate","jsx","_jsx","jsxs","_jsxs","EditPlantModal","_ref","isOpen","onClose","onPlantUpdated","plant","userRole","formData","setFormData","nickname","location","acquisitionDate","currentHeightCm","currentWidthCm","potSize","soilType","healthStatus","notes","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","updatePlant","id","alert","error","className","children","onClick","onSubmit","type","placeholder","onChange","required","step","rows"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/components/plants/EditPlantModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as plantService from '../../services/plantService';\r\nimport { canUpdate } from '../../utils/permissions';\r\nimport '../../styles/modal.css';\r\n\r\nconst EditPlantModal = ({ isOpen, onClose, onPlantUpdated, plant, userRole }) => {\r\n  const [formData, setFormData] = useState({\r\n    nickname: '',\r\n    location: '',\r\n    acquisitionDate: '',\r\n    currentHeightCm: '',\r\n    currentWidthCm: '',\r\n    potSize: '',\r\n    soilType: '',\r\n    healthStatus: 'GOOD',\r\n    notes: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (plant) {\r\n      setFormData({\r\n        nickname: plant.nickname || '',\r\n        location: plant.location || '',\r\n        acquisitionDate: plant.acquisitionDate || '',\r\n        currentHeightCm: plant.currentHeightCm || '',\r\n        currentWidthCm: plant.currentWidthCm || '',\r\n        potSize: plant.potSize || '',\r\n        soilType: plant.soilType || '',\r\n        healthStatus: plant.healthStatus || 'GOOD',\r\n        notes: plant.notes || ''\r\n      });\r\n    }\r\n  }, [plant]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await plantService.updatePlant(plant.id, formData, userRole);\r\n      alert('Plant updated successfully!');\r\n      onPlantUpdated();\r\n      onClose();\r\n    } catch (error) {\r\n      alert('Failed to update plant');\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n  \r\n  if (!canUpdate(userRole)) {\r\n    return (\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal-content\">\r\n          <h2>Access Denied</h2>\r\n          <p>You don't have permission to edit plants. Contact an administrator for access.</p>\r\n          <button onClick={onClose}>Close</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>Edit Plant</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nickname\"\r\n            placeholder=\"Plant Nickname *\"\r\n            value={formData.nickname}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            placeholder=\"Location\"\r\n            value={formData.location}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"acquisitionDate\"\r\n            placeholder=\"Acquisition Date\"\r\n            value={formData.acquisitionDate}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"currentHeightCm\"\r\n            placeholder=\"Height (cm)\"\r\n            value={formData.currentHeightCm}\r\n            onChange={handleChange}\r\n            step=\"0.1\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"currentWidthCm\"\r\n            placeholder=\"Width (cm)\"\r\n            value={formData.currentWidthCm}\r\n            onChange={handleChange}\r\n            step=\"0.1\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"potSize\"\r\n            placeholder=\"Pot Size\"\r\n            value={formData.potSize}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"soilType\"\r\n            placeholder=\"Soil Type\"\r\n            value={formData.soilType}\r\n            onChange={handleChange}\r\n          />\r\n          <select\r\n            name=\"healthStatus\"\r\n            value={formData.healthStatus}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"EXCELLENT\">Excellent</option>\r\n            <option value=\"GOOD\">Good</option>\r\n            <option value=\"FAIR\">Fair</option>\r\n            <option value=\"POOR\">Poor</option>\r\n            <option value=\"CRITICAL\">Critical</option>\r\n          </select>\r\n          <textarea\r\n            name=\"notes\"\r\n            placeholder=\"Notes\"\r\n            value={formData.notes}\r\n            onChange={handleChange}\r\n            rows=\"3\"\r\n          />\r\n          <div className=\"modal-actions\">\r\n            <button type=\"button\" onClick={onClose}>Cancel</button>\r\n            <button type=\"submit\">Update Plant</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPlantModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}