{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/auth\"; // Spring Boot backend\n\n// Login\nexport const login = async ({\n  username,\n  password\n}) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    const {\n      accessToken,\n      refreshToken\n    } = response.data;\n\n    // store tokens\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n\n    // optional: keep accessToken in sessionStorage too\n    sessionStorage.setItem(\"accessToken\", accessToken);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed.\");\n  }\n};\n\n// Register\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n    console.error('Registration error details:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message || \"Registration failed.\";\n    throw new Error(errorMessage);\n  }\n};\n\n// Forgot Password\nexport const forgotPassword = async email => {\n  try {\n    const response = await axios.post(`${API_URL}/forgot-password?email=${email}`);\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Failed to send reset link.\");\n  }\n};\n\n// Logout\nexport const logout = () => {\n  localStorage.removeItem(\"accessToken\");\n  localStorage.removeItem(\"refreshToken\");\n  sessionStorage.removeItem(\"accessToken\");\n};","map":{"version":3,"names":["axios","API_URL","login","username","password","response","post","accessToken","refreshToken","data","localStorage","setItem","sessionStorage","error","_error$response","_error$response$data","Error","message","register","userData","headers","_error$response2","_error$response3","_error$response3$data","_error$response4","_error$response4$data","console","errorMessage","forgotPassword","email","_error$response5","_error$response5$data","logout","removeItem"],"sources":["C:/Users/Dell/Desktop/67360ded-0817-4799-8ae5-2823784df4ae-b3f10c22-d1ec-4f70-af75-ccf1409381e7-Sibin-backend/reactapp/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth\"; // Spring Boot backend\n\n// Login\nexport const login = async ({ username, password }) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, { username, password });\n    const { accessToken, refreshToken } = response.data;\n\n    // store tokens\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n\n    // optional: keep accessToken in sessionStorage too\n    sessionStorage.setItem(\"accessToken\", accessToken);\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || \"Login failed.\");\n  }\n};\n\n// Register\nexport const register = async (userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Registration error details:', error.response?.data);\n    const errorMessage = error.response?.data?.error || error.response?.data?.message || error.message || \"Registration failed.\";\n    throw new Error(errorMessage);\n  }\n};\n\n// Forgot Password\nexport const forgotPassword = async (email) => {\n  try {\n    const response = await axios.post(`${API_URL}/forgot-password?email=${email}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || \"Failed to send reset link.\");\n  }\n};\n\n// Logout\nexport const logout = () => {\n  localStorage.removeItem(\"accessToken\");\n  localStorage.removeItem(\"refreshToken\");\n  sessionStorage.removeItem(\"accessToken\");\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAO;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC7E,MAAM;MAAEG,WAAW;MAAEC;IAAa,CAAC,GAAGH,QAAQ,CAACI,IAAI;;IAEnD;IACAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;IAChDG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,YAAY,CAAC;;IAElD;IACAI,cAAc,CAACD,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;IAElD,OAAOF,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,eAAe,CAAC;EACnE;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,EAAEkB,QAAQ,EAAE;MACjEC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IACF,OAAOf,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAQ,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACb,KAAK,CAAC,6BAA6B,GAAAQ,gBAAA,GAAER,KAAK,CAACR,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,CAAC;IAClE,MAAMkB,YAAY,GAAG,EAAAL,gBAAA,GAAAT,KAAK,CAACR,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBb,IAAI,cAAAc,qBAAA,uBAApBA,qBAAA,CAAsBV,KAAK,OAAAW,gBAAA,GAAIX,KAAK,CAACR,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBR,OAAO,KAAIJ,KAAK,CAACI,OAAO,IAAI,sBAAsB;IAC5H,MAAM,IAAID,KAAK,CAACW,YAAY,CAAC;EAC/B;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACF,MAAMxB,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,0BAA0B4B,KAAK,EAAE,CAAC;IAC9E,OAAOxB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAiB,gBAAA,EAAAC,qBAAA;IACd,MAAM,IAAIf,KAAK,CAAC,EAAAc,gBAAA,GAAAjB,KAAK,CAACR,QAAQ,cAAAyB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrB,IAAI,cAAAsB,qBAAA,uBAApBA,qBAAA,CAAsBd,OAAO,KAAI,4BAA4B,CAAC;EAChF;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,MAAM,GAAGA,CAAA,KAAM;EAC1BtB,YAAY,CAACuB,UAAU,CAAC,aAAa,CAAC;EACtCvB,YAAY,CAACuB,UAAU,CAAC,cAAc,CAAC;EACvCrB,cAAc,CAACqB,UAAU,CAAC,aAAa,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}