{"ast":null,"code":"import{axiosConfig}from'./axiosConfig';const API_URL='http://localhost:8080/api/admin';export const getAllUsers=async()=>{try{const response=await axiosConfig.get(\"\".concat(API_URL,\"/users\"));return response.data;}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to fetch users');}};export const createUser=async userData=>{try{// Map frontend field names to backend field names\nconst backendUserData={username:userData.username,email:userData.email,password:userData.password,// Use password field for register endpoint\nrole:userData.role,gardeningExperience:userData.gardeningExperience,location:userData.location,timezone:userData.timezone};const response=await axiosConfig.post(\"http://localhost:8080/api/auth/register\",backendUserData,{headers:{'Content-Type':'application/json'}});return response.data;}catch(error){var _error$response2,_error$response2$data,_error$response3;let errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||'Failed to create user';if(typeof errorMessage==='string'){errorMessage=errorMessage.replace(/[{}\"]/g,'');}else{errorMessage=JSON.stringify(errorMessage).replace(/[{}\"]/g,'');}throw new Error(errorMessage);}};export const updateUser=async(userId,userData)=>{try{const response=await axiosConfig.put(\"\".concat(API_URL,\"/users/\").concat(userId),userData);return response.data;}catch(error){var _error$response4,_error$response4$data;throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to update user');}};export const deleteUser=async userId=>{try{const response=await axiosConfig.delete(\"\".concat(API_URL,\"/users/\").concat(userId));return response.data;}catch(error){var _error$response5,_error$response5$data;throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to delete user');}};export const getAdminStats=async()=>{try{const response=await axiosConfig.get(\"\".concat(API_URL,\"/stats\"));return response.data;}catch(error){var _error$response6,_error$response6$data;throw new Error(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to fetch statistics');}};","map":{"version":3,"names":["axiosConfig","API_URL","getAllUsers","response","get","concat","data","error","_error$response","_error$response$data","Error","message","createUser","userData","backendUserData","username","email","password","role","gardeningExperience","location","timezone","post","headers","_error$response2","_error$response2$data","_error$response3","errorMessage","replace","JSON","stringify","updateUser","userId","put","_error$response4","_error$response4$data","deleteUser","delete","_error$response5","_error$response5$data","getAdminStats","_error$response6","_error$response6$data"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/services/userService.js"],"sourcesContent":["import { axiosConfig } from './axiosConfig';\n\nconst API_URL = 'http://localhost:8080/api/admin';\n\nexport const getAllUsers = async () => {\n  try {\n    const response = await axiosConfig.get(`${API_URL}/users`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to fetch users');\n  }\n};\n\nexport const createUser = async (userData) => {\n  try {\n    // Map frontend field names to backend field names\n    const backendUserData = {\n      username: userData.username,\n      email: userData.email,\n      password: userData.password, // Use password field for register endpoint\n      role: userData.role,\n      gardeningExperience: userData.gardeningExperience,\n      location: userData.location,\n      timezone: userData.timezone\n    };\n    const response = await axiosConfig.post(`http://localhost:8080/api/auth/register`, backendUserData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    let errorMessage = error.response?.data?.message || error.response?.data || 'Failed to create user';\n    if (typeof errorMessage === 'string') {\n      errorMessage = errorMessage.replace(/[{}\"]/g, '');\n    } else {\n      errorMessage = JSON.stringify(errorMessage).replace(/[{}\"]/g, '');\n    }\n    throw new Error(errorMessage);\n  }\n};\n\nexport const updateUser = async (userId, userData) => {\n  try {\n    const response = await axiosConfig.put(`${API_URL}/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to update user');\n  }\n};\n\nexport const deleteUser = async (userId) => {\n  try {\n    const response = await axiosConfig.delete(`${API_URL}/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to delete user');\n  }\n};\n\nexport const getAdminStats = async () => {\n  try {\n    const response = await axiosConfig.get(`${API_URL}/stats`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to fetch statistics');\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}