{"ast":null,"code":"import { useLayoutEffect } from 'react';\nimport { useAppDispatch } from './hooks';\nimport { addTooltipEntrySettings, removeTooltipEntrySettings } from './tooltipSlice';\nimport { useIsPanorama } from '../context/PanoramaContext';\nexport function SetTooltipEntrySettings(_ref) {\n  var {\n    fn,\n    args\n  } = _ref;\n  var dispatch = useAppDispatch();\n  var isPanorama = useIsPanorama();\n  useLayoutEffect(() => {\n    if (isPanorama) {\n      // Panorama graphical items should never contribute to Tooltip payload.\n      return undefined;\n    }\n    var tooltipEntrySettings = fn(args);\n    dispatch(addTooltipEntrySettings(tooltipEntrySettings));\n    return () => {\n      dispatch(removeTooltipEntrySettings(tooltipEntrySettings));\n    };\n  }, [fn, args, dispatch, isPanorama]);\n  return null;\n}","map":{"version":3,"names":["useLayoutEffect","useAppDispatch","addTooltipEntrySettings","removeTooltipEntrySettings","useIsPanorama","SetTooltipEntrySettings","_ref","fn","args","dispatch","isPanorama","undefined","tooltipEntrySettings"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/recharts/es6/state/SetTooltipEntrySettings.js"],"sourcesContent":["import { useLayoutEffect } from 'react';\r\nimport { useAppDispatch } from './hooks';\r\nimport { addTooltipEntrySettings, removeTooltipEntrySettings } from './tooltipSlice';\r\nimport { useIsPanorama } from '../context/PanoramaContext';\r\nexport function SetTooltipEntrySettings(_ref) {\r\n  var {\r\n    fn,\r\n    args\r\n  } = _ref;\r\n  var dispatch = useAppDispatch();\r\n  var isPanorama = useIsPanorama();\r\n  useLayoutEffect(() => {\r\n    if (isPanorama) {\r\n      // Panorama graphical items should never contribute to Tooltip payload.\r\n      return undefined;\r\n    }\r\n    var tooltipEntrySettings = fn(args);\r\n    dispatch(addTooltipEntrySettings(tooltipEntrySettings));\r\n    return () => {\r\n      dispatch(removeTooltipEntrySettings(tooltipEntrySettings));\r\n    };\r\n  }, [fn, args, dispatch, isPanorama]);\r\n  return null;\r\n}"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,SAAS;AACxC,SAASC,uBAAuB,EAAEC,0BAA0B,QAAQ,gBAAgB;AACpF,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,OAAO,SAASC,uBAAuBA,CAACC,IAAI,EAAE;EAC5C,IAAI;IACFC,EAAE;IACFC;EACF,CAAC,GAAGF,IAAI;EACR,IAAIG,QAAQ,GAAGR,cAAc,CAAC,CAAC;EAC/B,IAAIS,UAAU,GAAGN,aAAa,CAAC,CAAC;EAChCJ,eAAe,CAAC,MAAM;IACpB,IAAIU,UAAU,EAAE;MACd;MACA,OAAOC,SAAS;IAClB;IACA,IAAIC,oBAAoB,GAAGL,EAAE,CAACC,IAAI,CAAC;IACnCC,QAAQ,CAACP,uBAAuB,CAACU,oBAAoB,CAAC,CAAC;IACvD,OAAO,MAAM;MACXH,QAAQ,CAACN,0BAA0B,CAACS,oBAAoB,CAAC,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,CAACL,EAAE,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,CAAC,CAAC;EACpC,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}