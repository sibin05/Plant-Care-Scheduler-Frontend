{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\project\\\\frontend\\\\Plant-Care-Scheduler-Frontend\\\\src\\\\components\\\\NotificationSystem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationSystem = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [permission, setPermission] = useState(Notification.permission);\n  useEffect(() => {\n    // Request notification permission on component mount\n    if ('Notification' in window && permission === 'default') {\n      Notification.requestPermission().then(setPermission);\n    }\n\n    // Check for overdue tasks every minute\n    const interval = setInterval(checkOverdueTasks, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const checkOverdueTasks = () => {\n    const now = new Date();\n    const careReminders = JSON.parse(localStorage.getItem('careReminders') || '[]');\n    careReminders.forEach(reminder => {\n      const reminderDate = new Date(reminder.date);\n      if (reminderDate <= now && !reminder.notified) {\n        showNotification(reminder);\n        // Mark as notified\n        reminder.notified = true;\n        localStorage.setItem('careReminders', JSON.stringify(careReminders));\n      }\n    });\n  };\n  const showNotification = reminder => {\n    if (permission === 'granted') {\n      const notification = new Notification(`PLANTA Reminder`, {\n        body: `Time to ${reminder.type.toLowerCase()} your ${reminder.plantName}!`,\n        icon: '/favicon.ico',\n        badge: '/favicon.ico'\n      });\n      notification.onclick = () => {\n        window.focus();\n        notification.close();\n      };\n\n      // Auto close after 5 seconds\n      setTimeout(() => notification.close(), 5000);\n    }\n\n    // Add to in-app notifications\n    const newNotification = {\n      id: Date.now(),\n      message: `Time to ${reminder.type.toLowerCase()} your ${reminder.plantName}!`,\n      type: reminder.type,\n      timestamp: new Date(),\n      read: false\n    };\n    setNotifications(prev => [newNotification, ...prev.slice(0, 4)]); // Keep only 5 notifications\n  };\n  const markAsRead = id => {\n    setNotifications(prev => prev.map(notif => notif.id === id ? {\n      ...notif,\n      read: true\n    } : notif));\n  };\n  const clearAll = () => {\n    setNotifications([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '20px',\n      right: '20px',\n      zIndex: 1000\n    },\n    children: notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n        padding: '16px',\n        maxWidth: '300px',\n        border: '1px solid #10b981'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: 0,\n            color: '#065f46',\n            fontSize: '14px',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"14\",\n            height: \"14\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), \"Care Reminders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearAll,\n          style: {\n            background: 'none',\n            border: 'none',\n            color: '#6b7280',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), notifications.slice(0, 3).map(notif => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => markAsRead(notif.id),\n        style: {\n          padding: '8px',\n          backgroundColor: notif.read ? '#f9fafb' : '#ecfdf5',\n          borderRadius: '4px',\n          marginBottom: '8px',\n          cursor: 'pointer',\n          fontSize: '12px',\n          border: notif.read ? '1px solid #e5e7eb' : '1px solid #10b981'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: '500',\n            color: '#065f46'\n          },\n          children: notif.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#6b7280',\n            fontSize: '10px'\n          },\n          children: notif.timestamp.toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, notif.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationSystem, \"JPreowNnJeEPVQfdN7sZ29e64WQ=\");\n_c = NotificationSystem;\nexport default NotificationSystem;\nvar _c;\n$RefreshReg$(_c, \"NotificationSystem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotificationSystem","_s","notifications","setNotifications","permission","setPermission","Notification","window","requestPermission","then","interval","setInterval","checkOverdueTasks","clearInterval","now","Date","careReminders","JSON","parse","localStorage","getItem","forEach","reminder","reminderDate","date","notified","showNotification","setItem","stringify","notification","body","type","toLowerCase","plantName","icon","badge","onclick","focus","close","setTimeout","newNotification","id","message","timestamp","read","prev","slice","markAsRead","map","notif","clearAll","style","position","top","right","zIndex","children","length","backgroundColor","borderRadius","boxShadow","padding","maxWidth","border","display","justifyContent","alignItems","marginBottom","margin","color","fontSize","gap","width","height","viewBox","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","cursor","fontWeight","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/components/NotificationSystem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst NotificationSystem = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [permission, setPermission] = useState(Notification.permission);\r\n\r\n  useEffect(() => {\r\n    // Request notification permission on component mount\r\n    if ('Notification' in window && permission === 'default') {\r\n      Notification.requestPermission().then(setPermission);\r\n    }\r\n\r\n    // Check for overdue tasks every minute\r\n    const interval = setInterval(checkOverdueTasks, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const checkOverdueTasks = () => {\r\n    const now = new Date();\r\n    const careReminders = JSON.parse(localStorage.getItem('careReminders') || '[]');\r\n    \r\n    careReminders.forEach(reminder => {\r\n      const reminderDate = new Date(reminder.date);\r\n      if (reminderDate <= now && !reminder.notified) {\r\n        showNotification(reminder);\r\n        // Mark as notified\r\n        reminder.notified = true;\r\n        localStorage.setItem('careReminders', JSON.stringify(careReminders));\r\n      }\r\n    });\r\n  };\r\n\r\n  const showNotification = (reminder) => {\r\n    if (permission === 'granted') {\r\n      const notification = new Notification(`PLANTA Reminder`, {\r\n        body: `Time to ${reminder.type.toLowerCase()} your ${reminder.plantName}!`,\r\n        icon: '/favicon.ico',\r\n        badge: '/favicon.ico'\r\n      });\r\n\r\n      notification.onclick = () => {\r\n        window.focus();\r\n        notification.close();\r\n      };\r\n\r\n      // Auto close after 5 seconds\r\n      setTimeout(() => notification.close(), 5000);\r\n    }\r\n\r\n    // Add to in-app notifications\r\n    const newNotification = {\r\n      id: Date.now(),\r\n      message: `Time to ${reminder.type.toLowerCase()} your ${reminder.plantName}!`,\r\n      type: reminder.type,\r\n      timestamp: new Date(),\r\n      read: false\r\n    };\r\n\r\n    setNotifications(prev => [newNotification, ...prev.slice(0, 4)]); // Keep only 5 notifications\r\n  };\r\n\r\n  const markAsRead = (id) => {\r\n    setNotifications(prev => \r\n      prev.map(notif => \r\n        notif.id === id ? { ...notif, read: true } : notif\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setNotifications([]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'fixed', top: '20px', right: '20px', zIndex: 1000 }}>\r\n      {notifications.length > 0 && (\r\n        <div style={{ \r\n          backgroundColor: 'white', \r\n          borderRadius: '8px', \r\n          boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n          padding: '16px',\r\n          maxWidth: '300px',\r\n          border: '1px solid #10b981'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '12px' }}>\r\n            <h4 style={{ margin: 0, color: '#065f46', fontSize: '14px', display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\"/>\r\n              </svg>\r\n              Care Reminders\r\n            </h4>\r\n            <button \r\n              onClick={clearAll}\r\n              style={{ \r\n                background: 'none', \r\n                border: 'none', \r\n                color: '#6b7280', \r\n                cursor: 'pointer',\r\n                fontSize: '12px'\r\n              }}\r\n            >\r\n              Clear All\r\n            </button>\r\n          </div>\r\n          {notifications.slice(0, 3).map(notif => (\r\n            <div \r\n              key={notif.id}\r\n              onClick={() => markAsRead(notif.id)}\r\n              style={{ \r\n                padding: '8px',\r\n                backgroundColor: notif.read ? '#f9fafb' : '#ecfdf5',\r\n                borderRadius: '4px',\r\n                marginBottom: '8px',\r\n                cursor: 'pointer',\r\n                fontSize: '12px',\r\n                border: notif.read ? '1px solid #e5e7eb' : '1px solid #10b981'\r\n              }}\r\n            >\r\n              <div style={{ fontWeight: '500', color: '#065f46' }}>{notif.message}</div>\r\n              <div style={{ color: '#6b7280', fontSize: '10px' }}>\r\n                {notif.timestamp.toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationSystem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACF,UAAU,CAAC;EAErEP,SAAS,CAAC,MAAM;IACd;IACA,IAAI,cAAc,IAAIU,MAAM,IAAIH,UAAU,KAAK,SAAS,EAAE;MACxDE,YAAY,CAACE,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAACJ,aAAa,CAAC;IACtD;;IAEA;IACA,MAAMK,QAAQ,GAAGC,WAAW,CAACC,iBAAiB,EAAE,KAAK,CAAC;IACtD,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAME,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC;IAE/EJ,aAAa,CAACK,OAAO,CAACC,QAAQ,IAAI;MAChC,MAAMC,YAAY,GAAG,IAAIR,IAAI,CAACO,QAAQ,CAACE,IAAI,CAAC;MAC5C,IAAID,YAAY,IAAIT,GAAG,IAAI,CAACQ,QAAQ,CAACG,QAAQ,EAAE;QAC7CC,gBAAgB,CAACJ,QAAQ,CAAC;QAC1B;QACAA,QAAQ,CAACG,QAAQ,GAAG,IAAI;QACxBN,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAEV,IAAI,CAACW,SAAS,CAACZ,aAAa,CAAC,CAAC;MACtE;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,gBAAgB,GAAIJ,QAAQ,IAAK;IACrC,IAAIlB,UAAU,KAAK,SAAS,EAAE;MAC5B,MAAMyB,YAAY,GAAG,IAAIvB,YAAY,CAAC,iBAAiB,EAAE;QACvDwB,IAAI,EAAE,WAAWR,QAAQ,CAACS,IAAI,CAACC,WAAW,CAAC,CAAC,SAASV,QAAQ,CAACW,SAAS,GAAG;QAC1EC,IAAI,EAAE,cAAc;QACpBC,KAAK,EAAE;MACT,CAAC,CAAC;MAEFN,YAAY,CAACO,OAAO,GAAG,MAAM;QAC3B7B,MAAM,CAAC8B,KAAK,CAAC,CAAC;QACdR,YAAY,CAACS,KAAK,CAAC,CAAC;MACtB,CAAC;;MAED;MACAC,UAAU,CAAC,MAAMV,YAAY,CAACS,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;IAC9C;;IAEA;IACA,MAAME,eAAe,GAAG;MACtBC,EAAE,EAAE1B,IAAI,CAACD,GAAG,CAAC,CAAC;MACd4B,OAAO,EAAE,WAAWpB,QAAQ,CAACS,IAAI,CAACC,WAAW,CAAC,CAAC,SAASV,QAAQ,CAACW,SAAS,GAAG;MAC7EF,IAAI,EAAET,QAAQ,CAACS,IAAI;MACnBY,SAAS,EAAE,IAAI5B,IAAI,CAAC,CAAC;MACrB6B,IAAI,EAAE;IACR,CAAC;IAEDzC,gBAAgB,CAAC0C,IAAI,IAAI,CAACL,eAAe,EAAE,GAAGK,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,MAAMC,UAAU,GAAIN,EAAE,IAAK;IACzBtC,gBAAgB,CAAC0C,IAAI,IACnBA,IAAI,CAACG,GAAG,CAACC,KAAK,IACZA,KAAK,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,KAAK;MAAEL,IAAI,EAAE;IAAK,CAAC,GAAGK,KAC/C,CACF,CAAC;EACH,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB/C,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA;IAAKoD,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,GAAG,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAK,CAAE;IAAAC,QAAA,EACzEtD,aAAa,CAACuD,MAAM,GAAG,CAAC,iBACvB1D,OAAA;MAAKoD,KAAK,EAAE;QACVO,eAAe,EAAE,OAAO;QACxBC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE,6BAA6B;QACxCC,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE;MACV,CAAE;MAAAP,QAAA,gBACAzD,OAAA;QAAKoD,KAAK,EAAE;UAAEa,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,eAAe;UAAEC,UAAU,EAAE,QAAQ;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAX,QAAA,gBAC3GzD,OAAA;UAAIoD,KAAK,EAAE;YAAEiB,MAAM,EAAE,CAAC;YAAEC,KAAK,EAAE,SAAS;YAAEC,QAAQ,EAAE,MAAM;YAAEN,OAAO,EAAE,MAAM;YAAEE,UAAU,EAAE,QAAQ;YAAEK,GAAG,EAAE;UAAM,CAAE;UAAAf,QAAA,gBAC9GzD,OAAA;YAAKyE,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAnB,QAAA,eACjEzD,OAAA;cAAM6E,CAAC,EAAC;YAAiK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxK,CAAC,kBAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLjF,OAAA;UACEkF,OAAO,EAAE/B,QAAS;UAClBC,KAAK,EAAE;YACL+B,UAAU,EAAE,MAAM;YAClBnB,MAAM,EAAE,MAAM;YACdM,KAAK,EAAE,SAAS;YAChBc,MAAM,EAAE,SAAS;YACjBb,QAAQ,EAAE;UACZ,CAAE;UAAAd,QAAA,EACH;QAED;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACL9E,aAAa,CAAC4C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACE,GAAG,CAACC,KAAK,iBAClClD,OAAA;QAEEkF,OAAO,EAAEA,CAAA,KAAMlC,UAAU,CAACE,KAAK,CAACR,EAAE,CAAE;QACpCU,KAAK,EAAE;UACLU,OAAO,EAAE,KAAK;UACdH,eAAe,EAAET,KAAK,CAACL,IAAI,GAAG,SAAS,GAAG,SAAS;UACnDe,YAAY,EAAE,KAAK;UACnBQ,YAAY,EAAE,KAAK;UACnBgB,MAAM,EAAE,SAAS;UACjBb,QAAQ,EAAE,MAAM;UAChBP,MAAM,EAAEd,KAAK,CAACL,IAAI,GAAG,mBAAmB,GAAG;QAC7C,CAAE;QAAAY,QAAA,gBAEFzD,OAAA;UAAKoD,KAAK,EAAE;YAAEiC,UAAU,EAAE,KAAK;YAAEf,KAAK,EAAE;UAAU,CAAE;UAAAb,QAAA,EAAEP,KAAK,CAACP;QAAO;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1EjF,OAAA;UAAKoD,KAAK,EAAE;YAAEkB,KAAK,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAd,QAAA,EAChDP,KAAK,CAACN,SAAS,CAAC0C,kBAAkB,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA,GAfD/B,KAAK,CAACR,EAAE;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/E,EAAA,CA9HID,kBAAkB;AAAAsF,EAAA,GAAlBtF,kBAAkB;AAgIxB,eAAeA,kBAAkB;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}