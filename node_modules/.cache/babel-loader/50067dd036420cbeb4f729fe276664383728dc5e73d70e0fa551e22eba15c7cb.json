{"ast":null,"code":"import { useEffect } from 'react';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { setLayout, setMargin } from './layoutSlice';\nimport { useAppDispatch } from './hooks';\n\n/**\r\n * \"Main\" props are props that are only accepted on the main chart,\r\n * as opposed to the small panorama chart inside a Brush.\r\n */\n\nexport function ReportMainChartProps(_ref) {\n  var {\n    layout,\n    margin\n  } = _ref;\n  var dispatch = useAppDispatch();\n\n  /*\r\n   * Skip dispatching properties in panorama chart for two reasons:\r\n   * 1. The root chart should be deciding on these properties, and\r\n   * 2. Brush reads these properties from redux store, and so they must remain stable\r\n   *      to avoid circular dependency and infinite re-rendering.\r\n   */\n  var isPanorama = useIsPanorama();\n  /*\r\n   * useEffect here is required to avoid the \"Cannot update a component while rendering a different component\" error.\r\n   * https://github.com/facebook/react/issues/18178\r\n   *\r\n   * Reported in https://github.com/recharts/recharts/issues/5514\r\n   */\n  useEffect(() => {\n    if (!isPanorama) {\n      dispatch(setLayout(layout));\n      dispatch(setMargin(margin));\n    }\n  }, [dispatch, isPanorama, layout, margin]);\n  return null;\n}","map":{"version":3,"names":["useEffect","useIsPanorama","setLayout","setMargin","useAppDispatch","ReportMainChartProps","_ref","layout","margin","dispatch","isPanorama"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/recharts/es6/state/ReportMainChartProps.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useIsPanorama } from '../context/PanoramaContext';\r\nimport { setLayout, setMargin } from './layoutSlice';\r\nimport { useAppDispatch } from './hooks';\r\n\r\n/**\r\n * \"Main\" props are props that are only accepted on the main chart,\r\n * as opposed to the small panorama chart inside a Brush.\r\n */\r\n\r\nexport function ReportMainChartProps(_ref) {\r\n  var {\r\n    layout,\r\n    margin\r\n  } = _ref;\r\n  var dispatch = useAppDispatch();\r\n\r\n  /*\r\n   * Skip dispatching properties in panorama chart for two reasons:\r\n   * 1. The root chart should be deciding on these properties, and\r\n   * 2. Brush reads these properties from redux store, and so they must remain stable\r\n   *      to avoid circular dependency and infinite re-rendering.\r\n   */\r\n  var isPanorama = useIsPanorama();\r\n  /*\r\n   * useEffect here is required to avoid the \"Cannot update a component while rendering a different component\" error.\r\n   * https://github.com/facebook/react/issues/18178\r\n   *\r\n   * Reported in https://github.com/recharts/recharts/issues/5514\r\n   */\r\n  useEffect(() => {\r\n    if (!isPanorama) {\r\n      dispatch(setLayout(layout));\r\n      dispatch(setMargin(margin));\r\n    }\r\n  }, [dispatch, isPanorama, layout, margin]);\r\n  return null;\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,SAAS,EAAEC,SAAS,QAAQ,eAAe;AACpD,SAASC,cAAc,QAAQ,SAAS;;AAExC;AACA;AACA;AACA;;AAEA,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACzC,IAAI;IACFC,MAAM;IACNC;EACF,CAAC,GAAGF,IAAI;EACR,IAAIG,QAAQ,GAAGL,cAAc,CAAC,CAAC;;EAE/B;AACF;AACA;AACA;AACA;AACA;EACE,IAAIM,UAAU,GAAGT,aAAa,CAAC,CAAC;EAChC;AACF;AACA;AACA;AACA;AACA;EACED,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,UAAU,EAAE;MACfD,QAAQ,CAACP,SAAS,CAACK,MAAM,CAAC,CAAC;MAC3BE,QAAQ,CAACN,SAAS,CAACK,MAAM,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,CAACC,QAAQ,EAAEC,UAAU,EAAEH,MAAM,EAAEC,MAAM,CAAC,CAAC;EAC1C,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}