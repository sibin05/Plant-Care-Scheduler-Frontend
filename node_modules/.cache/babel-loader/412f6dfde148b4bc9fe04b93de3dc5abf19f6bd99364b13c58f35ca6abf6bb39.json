{"ast":null,"code":"const deburrMap = new Map(Object.entries({\n  Æ: 'Ae',\n  Ð: 'D',\n  Ø: 'O',\n  Þ: 'Th',\n  ß: 'ss',\n  æ: 'ae',\n  ð: 'd',\n  ø: 'o',\n  þ: 'th',\n  Đ: 'D',\n  đ: 'd',\n  Ħ: 'H',\n  ħ: 'h',\n  ı: 'i',\n  Ĳ: 'IJ',\n  ĳ: 'ij',\n  ĸ: 'k',\n  Ŀ: 'L',\n  ŀ: 'l',\n  Ł: 'L',\n  ł: 'l',\n  ŉ: \"'n\",\n  Ŋ: 'N',\n  ŋ: 'n',\n  Œ: 'Oe',\n  œ: 'oe',\n  Ŧ: 'T',\n  ŧ: 't',\n  ſ: 's'\n}));\nfunction deburr(str) {\n  str = str.normalize('NFD');\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    if (char >= '\\u0300' && char <= '\\u036f' || char >= '\\ufe20' && char <= '\\ufe23') {\n      continue;\n    }\n    result += deburrMap.get(char) ?? char;\n  }\n  return result;\n}\nexport { deburr };","map":{"version":3,"names":["deburrMap","Map","Object","entries","Æ","Ð","Ø","Þ","ß","æ","ð","ø","þ","Đ","đ","Ħ","ħ","ı","Ĳ","ĳ","ĸ","Ŀ","ŀ","Ł","ł","ŉ","Ŋ","ŋ","Œ","œ","Ŧ","ŧ","ſ","deburr","str","normalize","result","i","length","char","get"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/es-toolkit/dist/string/deburr.mjs"],"sourcesContent":["const deburrMap = new Map(Object.entries({\r\n    Æ: 'Ae',\r\n    Ð: 'D',\r\n    Ø: 'O',\r\n    Þ: 'Th',\r\n    ß: 'ss',\r\n    æ: 'ae',\r\n    ð: 'd',\r\n    ø: 'o',\r\n    þ: 'th',\r\n    Đ: 'D',\r\n    đ: 'd',\r\n    Ħ: 'H',\r\n    ħ: 'h',\r\n    ı: 'i',\r\n    Ĳ: 'IJ',\r\n    ĳ: 'ij',\r\n    ĸ: 'k',\r\n    Ŀ: 'L',\r\n    ŀ: 'l',\r\n    Ł: 'L',\r\n    ł: 'l',\r\n    ŉ: \"'n\",\r\n    Ŋ: 'N',\r\n    ŋ: 'n',\r\n    Œ: 'Oe',\r\n    œ: 'oe',\r\n    Ŧ: 'T',\r\n    ŧ: 't',\r\n    ſ: 's',\r\n}));\r\nfunction deburr(str) {\r\n    str = str.normalize('NFD');\r\n    let result = '';\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str[i];\r\n        if ((char >= '\\u0300' && char <= '\\u036f') || (char >= '\\ufe20' && char <= '\\ufe23')) {\r\n            continue;\r\n        }\r\n        result += deburrMap.get(char) ?? char;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport { deburr };\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,OAAO,CAAC;EACrCC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE;AACP,CAAC,CAAC,CAAC;AACH,SAASC,MAAMA,CAACC,GAAG,EAAE;EACjBA,GAAG,GAAGA,GAAG,CAACC,SAAS,CAAC,KAAK,CAAC;EAC1B,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,MAAME,IAAI,GAAGL,GAAG,CAACG,CAAC,CAAC;IACnB,IAAKE,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAQ,IAAMA,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAS,EAAE;MAClF;IACJ;IACAH,MAAM,IAAIpC,SAAS,CAACwC,GAAG,CAACD,IAAI,CAAC,IAAIA,IAAI;EACzC;EACA,OAAOH,MAAM;AACjB;AAEA,SAASH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}