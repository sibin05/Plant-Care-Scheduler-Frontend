{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst cloneDeepWith = require('./cloneDeepWith.js');\nconst keysIn = require('./keysIn.js');\nconst unset = require('./unset.js');\nconst getSymbolsIn = require('../_internal/getSymbolsIn.js');\nconst isDeepKey = require('../_internal/isDeepKey.js');\nconst flatten = require('../array/flatten.js');\nconst isPlainObject = require('../predicate/isPlainObject.js');\nfunction omit(obj) {\n  for (var _len = arguments.length, keysArr = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keysArr[_key - 1] = arguments[_key];\n  }\n  if (obj == null) {\n    return {};\n  }\n  keysArr = flatten.flatten(keysArr);\n  const result = cloneInOmit(obj, keysArr);\n  for (let i = 0; i < keysArr.length; i++) {\n    let keys = keysArr[i];\n    switch (typeof keys) {\n      case 'object':\n        {\n          if (!Array.isArray(keys)) {\n            keys = Array.from(keys);\n          }\n          for (let j = 0; j < keys.length; j++) {\n            const key = keys[j];\n            unset.unset(result, key);\n          }\n          break;\n        }\n      case 'string':\n      case 'symbol':\n      case 'number':\n        {\n          unset.unset(result, keys);\n          break;\n        }\n    }\n  }\n  return result;\n}\nfunction cloneInOmit(obj, keys) {\n  const hasDeepKey = keys.some(key => Array.isArray(key) || isDeepKey.isDeepKey(key));\n  if (hasDeepKey) {\n    return deepCloneInOmit(obj);\n  }\n  return shallowCloneInOmit(obj);\n}\nfunction shallowCloneInOmit(obj) {\n  const result = {};\n  const keysToCopy = [...keysIn.keysIn(obj), ...getSymbolsIn.getSymbolsIn(obj)];\n  for (let i = 0; i < keysToCopy.length; i++) {\n    const key = keysToCopy[i];\n    result[key] = obj[key];\n  }\n  return result;\n}\nfunction deepCloneInOmit(obj) {\n  const result = {};\n  const keysToCopy = [...keysIn.keysIn(obj), ...getSymbolsIn.getSymbolsIn(obj)];\n  for (let i = 0; i < keysToCopy.length; i++) {\n    const key = keysToCopy[i];\n    result[key] = cloneDeepWith.cloneDeepWith(obj[key], valueToClone => {\n      if (isPlainObject.isPlainObject(valueToClone)) {\n        return undefined;\n      }\n      return valueToClone;\n    });\n  }\n  return result;\n}\nexports.omit = omit;","map":{"version":3,"names":["Object","defineProperty","exports","Symbol","toStringTag","value","cloneDeepWith","require","keysIn","unset","getSymbolsIn","isDeepKey","flatten","isPlainObject","omit","obj","_len","arguments","length","keysArr","Array","_key","result","cloneInOmit","i","keys","isArray","from","j","key","hasDeepKey","some","deepCloneInOmit","shallowCloneInOmit","keysToCopy","valueToClone","undefined"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/es-toolkit/dist/compat/object/omit.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n\r\nconst cloneDeepWith = require('./cloneDeepWith.js');\r\nconst keysIn = require('./keysIn.js');\r\nconst unset = require('./unset.js');\r\nconst getSymbolsIn = require('../_internal/getSymbolsIn.js');\r\nconst isDeepKey = require('../_internal/isDeepKey.js');\r\nconst flatten = require('../array/flatten.js');\r\nconst isPlainObject = require('../predicate/isPlainObject.js');\r\n\r\nfunction omit(obj, ...keysArr) {\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    keysArr = flatten.flatten(keysArr);\r\n    const result = cloneInOmit(obj, keysArr);\r\n    for (let i = 0; i < keysArr.length; i++) {\r\n        let keys = keysArr[i];\r\n        switch (typeof keys) {\r\n            case 'object': {\r\n                if (!Array.isArray(keys)) {\r\n                    keys = Array.from(keys);\r\n                }\r\n                for (let j = 0; j < keys.length; j++) {\r\n                    const key = keys[j];\r\n                    unset.unset(result, key);\r\n                }\r\n                break;\r\n            }\r\n            case 'string':\r\n            case 'symbol':\r\n            case 'number': {\r\n                unset.unset(result, keys);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction cloneInOmit(obj, keys) {\r\n    const hasDeepKey = keys.some(key => Array.isArray(key) || isDeepKey.isDeepKey(key));\r\n    if (hasDeepKey) {\r\n        return deepCloneInOmit(obj);\r\n    }\r\n    return shallowCloneInOmit(obj);\r\n}\r\nfunction shallowCloneInOmit(obj) {\r\n    const result = {};\r\n    const keysToCopy = [...keysIn.keysIn(obj), ...getSymbolsIn.getSymbolsIn(obj)];\r\n    for (let i = 0; i < keysToCopy.length; i++) {\r\n        const key = keysToCopy[i];\r\n        result[key] = obj[key];\r\n    }\r\n    return result;\r\n}\r\nfunction deepCloneInOmit(obj) {\r\n    const result = {};\r\n    const keysToCopy = [...keysIn.keysIn(obj), ...getSymbolsIn.getSymbolsIn(obj)];\r\n    for (let i = 0; i < keysToCopy.length; i++) {\r\n        const key = keysToCopy[i];\r\n        result[key] = cloneDeepWith.cloneDeepWith(obj[key], valueToClone => {\r\n            if (isPlainObject.isPlainObject(valueToClone)) {\r\n                return undefined;\r\n            }\r\n            return valueToClone;\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\nexports.omit = omit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}