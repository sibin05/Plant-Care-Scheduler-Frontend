{"ast":null,"code":"import React,{useState}from\"react\";import{Link}from\"react-router-dom\";import{toast}from\"sonner\";import\"../../styles/auth.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPasswordPage=()=>{const[forgotEmail,setForgotEmail]=useState(\"\");const[otpSent,setOtpSent]=useState(false);const[otp,setOtp]=useState(\"\");const[newPassword,setNewPassword]=useState(\"\");const[loadingForgot,setLoadingForgot]=useState(false);return/*#__PURE__*/_jsx(\"div\",{className:\"auth-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),!otpSent?/*#__PURE__*/_jsxs(\"form\",{onSubmit:async e=>{e.preventDefault();if(!forgotEmail){toast.error(\"Enter your email\");return;}setLoadingForgot(true);try{const response=await fetch(\"http://localhost:8080/api/auth/forgot-password\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:forgotEmail})});const data=await response.json();if(!response.ok){toast.error(data.message||\"Email not registered\");}else{setOtpSent(true);toast.success(data.message||\"OTP sent to your registered email\");}}catch(err){console.error(err);toast.error(\"Network error. Try again later.\");}setLoadingForgot(false);},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Enter your registered email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:forgotEmail,onChange:e=>setForgotEmail(e.target.value),placeholder:\"Enter your email\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loadingForgot,children:loadingForgot?\"Sending OTP...\":\"Send OTP\"})]}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:async e=>{e.preventDefault();if(!otp||!newPassword){toast.error(\"Fill all fields\");return;}setLoadingForgot(true);try{const response=await fetch(\"http://localhost:8080/api/auth/reset-password\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:forgotEmail,otp,newPassword})});const data=await response.json();if(!response.ok){toast.error(data.message||\"Failed to reset password\");}else{toast.success(data.message||\"Password reset successful\");// Reset form and go back to email step or redirect to login\nsetOtpSent(false);setForgotEmail(\"\");setOtp(\"\");setNewPassword(\"\");}}catch(err){console.error(err);toast.error(\"Network error. Try again later.\");}setLoadingForgot(false);},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Enter OTP\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:otp,onChange:e=>setOtp(e.target.value),placeholder:\"Enter 6-digit OTP\",maxLength:\"6\",style:{textAlign:'center',letterSpacing:'2px'},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),placeholder:\"Enter new password\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loadingForgot,children:loadingForgot?\"Resetting...\":\"Reset Password\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Remember your password? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Back to Login\"})]})]})]})});};export default ForgotPasswordPage;","map":{"version":3,"names":["React","useState","Link","toast","jsx","_jsx","jsxs","_jsxs","ForgotPasswordPage","forgotEmail","setForgotEmail","otpSent","setOtpSent","otp","setOtp","newPassword","setNewPassword","loadingForgot","setLoadingForgot","className","children","onSubmit","e","preventDefault","error","response","fetch","method","headers","body","JSON","stringify","email","data","json","ok","message","success","err","console","type","value","onChange","target","placeholder","required","disabled","maxLength","style","textAlign","letterSpacing","to"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/components/auth/ForgotPasswordPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"sonner\";\r\nimport \"../../styles/auth.css\";\r\n\r\nconst ForgotPasswordPage = () => {\r\n  const [forgotEmail, setForgotEmail] = useState(\"\");\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [loadingForgot, setLoadingForgot] = useState(false);\r\n\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-image\" />\r\n\r\n        <div className=\"auth-form\">\r\n          <h2>Reset Password</h2>\r\n          \r\n          {!otpSent ? (\r\n            <form onSubmit={async (e) => {\r\n              e.preventDefault();\r\n              if (!forgotEmail) {\r\n                toast.error(\"Enter your email\");\r\n                return;\r\n              }\r\n\r\n              setLoadingForgot(true);\r\n\r\n              try {\r\n                const response = await fetch(\r\n                  \"http://localhost:8080/api/auth/forgot-password\",\r\n                  {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ email: forgotEmail }),\r\n                  }\r\n                );\r\n\r\n                const data = await response.json();\r\n\r\n                if (!response.ok) {\r\n                  toast.error(data.message || \"Email not registered\");\r\n                } else {\r\n                  setOtpSent(true);\r\n                  toast.success(data.message || \"OTP sent to your registered email\");\r\n                }\r\n              } catch (err) {\r\n                console.error(err);\r\n                toast.error(\"Network error. Try again later.\");\r\n              }\r\n\r\n              setLoadingForgot(false);\r\n            }}>\r\n              <div className=\"form-group\">\r\n                <label>Enter your registered email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={forgotEmail}\r\n                  onChange={(e) => setForgotEmail(e.target.value)}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <button type=\"submit\" disabled={loadingForgot}>\r\n                {loadingForgot ? \"Sending OTP...\" : \"Send OTP\"}\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <form onSubmit={async (e) => {\r\n              e.preventDefault();\r\n              if (!otp || !newPassword) {\r\n                toast.error(\"Fill all fields\");\r\n                return;\r\n              }\r\n\r\n              setLoadingForgot(true);\r\n\r\n              try {\r\n                const response = await fetch(\r\n                  \"http://localhost:8080/api/auth/reset-password\",\r\n                  {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                      email: forgotEmail,\r\n                      otp,\r\n                      newPassword,\r\n                    }),\r\n                  }\r\n                );\r\n\r\n                const data = await response.json();\r\n\r\n                if (!response.ok) {\r\n                  toast.error(data.message || \"Failed to reset password\");\r\n                } else {\r\n                  toast.success(data.message || \"Password reset successful\");\r\n                  // Reset form and go back to email step or redirect to login\r\n                  setOtpSent(false);\r\n                  setForgotEmail(\"\");\r\n                  setOtp(\"\");\r\n                  setNewPassword(\"\");\r\n                }\r\n              } catch (err) {\r\n                console.error(err);\r\n                toast.error(\"Network error. Try again later.\");\r\n              }\r\n\r\n              setLoadingForgot(false);\r\n            }}>\r\n              <div className=\"form-group\">\r\n                <label>Enter OTP</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={otp}\r\n                  onChange={(e) => setOtp(e.target.value)}\r\n                  placeholder=\"Enter 6-digit OTP\"\r\n                  maxLength=\"6\"\r\n                  style={{ textAlign: 'center', letterSpacing: '2px' }}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  placeholder=\"Enter new password\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" disabled={loadingForgot}>\r\n                {loadingForgot ? \"Resetting...\" : \"Reset Password\"}\r\n              </button>\r\n            </form>\r\n          )}\r\n\r\n          <p>\r\n            Remember your password? <Link to=\"/login\">Back to Login</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}