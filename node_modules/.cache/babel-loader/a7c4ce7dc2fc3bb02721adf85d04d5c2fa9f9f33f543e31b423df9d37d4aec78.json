{"ast":null,"code":"import axios from'axios';const API_URL='http://localhost:8080/api/';export const axiosConfig=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});export const authHeader=()=>{const token=localStorage.getItem('accessToken');return{Authorization:token?\"Bearer \".concat(token):''};};axiosConfig.interceptors.request.use(config=>{const token=localStorage.getItem('accessToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});","map":{"version":3,"names":["axios","API_URL","axiosConfig","create","baseURL","headers","authHeader","token","localStorage","getItem","Authorization","concat","interceptors","request","use","config"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/services/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/';\r\n\r\nexport const axiosConfig = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport const authHeader = () => {\r\n  const token = localStorage.getItem('accessToken');\r\n  return {\r\n    Authorization: token ? `Bearer ${token}` : '',\r\n  };\r\n};\r\n\r\naxiosConfig.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('accessToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,4BAA4B,CAE5C,MAAO,MAAM,CAAAC,WAAW,CAAGF,KAAK,CAACG,MAAM,CAAC,CACtCC,OAAO,CAAEH,OAAO,CAChBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACjD,MAAO,CACLC,aAAa,CAAEH,KAAK,WAAAI,MAAA,CAAaJ,KAAK,EAAK,EAC7C,CAAC,CACH,CAAC,CAEDL,WAAW,CAACU,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CAC/C,KAAM,CAAAR,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACjD,GAAIF,KAAK,CAAE,CACTQ,MAAM,CAACV,OAAO,CAACK,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAQ,MAAM,CACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}