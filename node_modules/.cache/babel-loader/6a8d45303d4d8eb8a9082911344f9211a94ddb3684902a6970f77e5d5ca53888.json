{"ast":null,"code":"import{axiosConfig}from'./axiosConfig';import{canUpdate,canDelete}from'../utils/permissions';export const getHealthRecords=plantId=>{const url=plantId?\"/health-records?plantId=\".concat(plantId):'/health-records';return axiosConfig.get(url);};export const createHealthRecord=(data,userRole)=>{if(!canUpdate(userRole)){throw new Error('Insufficient permissions to create health records');}return axiosConfig.post('/health-records',data);};export const updateHealthRecord=(id,data,userRole)=>{if(!canUpdate(userRole)){throw new Error('Insufficient permissions to update health records');}return axiosConfig.put(\"/health-records/\".concat(id),data);};export const deleteHealthRecord=(id,userRole)=>{if(!canDelete(userRole)){throw new Error('Insufficient permissions to delete health records');}return axiosConfig.delete(\"/health-records/\".concat(id));};export const getAllHealthRecords=()=>{return axiosConfig.get('/health-records');};","map":{"version":3,"names":["axiosConfig","canUpdate","canDelete","getHealthRecords","plantId","url","concat","get","createHealthRecord","data","userRole","Error","post","updateHealthRecord","id","put","deleteHealthRecord","delete","getAllHealthRecords"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/services/healthMonitorService.js"],"sourcesContent":["import { axiosConfig } from './axiosConfig';\r\nimport { canUpdate, canDelete } from '../utils/permissions';\r\n\r\nexport const getHealthRecords = (plantId) => {\r\n  const url = plantId ? `/health-records?plantId=${plantId}` : '/health-records';\r\n  return axiosConfig.get(url);\r\n};\r\n\r\nexport const createHealthRecord = (data, userRole) => {\r\n  if (!canUpdate(userRole)) {\r\n    throw new Error('Insufficient permissions to create health records');\r\n  }\r\n  return axiosConfig.post('/health-records', data);\r\n};\r\n\r\nexport const updateHealthRecord = (id, data, userRole) => {\r\n  if (!canUpdate(userRole)) {\r\n    throw new Error('Insufficient permissions to update health records');\r\n  }\r\n  return axiosConfig.put(`/health-records/${id}`, data);\r\n};\r\n\r\nexport const deleteHealthRecord = (id, userRole) => {\r\n  if (!canDelete(userRole)) {\r\n    throw new Error('Insufficient permissions to delete health records');\r\n  }\r\n  return axiosConfig.delete(`/health-records/${id}`);\r\n};\r\n\r\nexport const getAllHealthRecords = () => {\r\n  return axiosConfig.get('/health-records');\r\n};\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,eAAe,CAC3C,OAASC,SAAS,CAAEC,SAAS,KAAQ,sBAAsB,CAE3D,MAAO,MAAM,CAAAC,gBAAgB,CAAIC,OAAO,EAAK,CAC3C,KAAM,CAAAC,GAAG,CAAGD,OAAO,4BAAAE,MAAA,CAA8BF,OAAO,EAAK,iBAAiB,CAC9E,MAAO,CAAAJ,WAAW,CAACO,GAAG,CAACF,GAAG,CAAC,CAC7B,CAAC,CAED,MAAO,MAAM,CAAAG,kBAAkB,CAAGA,CAACC,IAAI,CAAEC,QAAQ,GAAK,CACpD,GAAI,CAACT,SAAS,CAACS,QAAQ,CAAC,CAAE,CACxB,KAAM,IAAI,CAAAC,KAAK,CAAC,mDAAmD,CAAC,CACtE,CACA,MAAO,CAAAX,WAAW,CAACY,IAAI,CAAC,iBAAiB,CAAEH,IAAI,CAAC,CAClD,CAAC,CAED,MAAO,MAAM,CAAAI,kBAAkB,CAAGA,CAACC,EAAE,CAAEL,IAAI,CAAEC,QAAQ,GAAK,CACxD,GAAI,CAACT,SAAS,CAACS,QAAQ,CAAC,CAAE,CACxB,KAAM,IAAI,CAAAC,KAAK,CAAC,mDAAmD,CAAC,CACtE,CACA,MAAO,CAAAX,WAAW,CAACe,GAAG,oBAAAT,MAAA,CAAoBQ,EAAE,EAAIL,IAAI,CAAC,CACvD,CAAC,CAED,MAAO,MAAM,CAAAO,kBAAkB,CAAGA,CAACF,EAAE,CAAEJ,QAAQ,GAAK,CAClD,GAAI,CAACR,SAAS,CAACQ,QAAQ,CAAC,CAAE,CACxB,KAAM,IAAI,CAAAC,KAAK,CAAC,mDAAmD,CAAC,CACtE,CACA,MAAO,CAAAX,WAAW,CAACiB,MAAM,oBAAAX,MAAA,CAAoBQ,EAAE,CAAE,CAAC,CACpD,CAAC,CAED,MAAO,MAAM,CAAAI,mBAAmB,CAAGA,CAAA,GAAM,CACvC,MAAO,CAAAlB,WAAW,CAACO,GAAG,CAAC,iBAAiB,CAAC,CAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}