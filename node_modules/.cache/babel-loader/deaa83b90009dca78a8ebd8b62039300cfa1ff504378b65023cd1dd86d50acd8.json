{"ast":null,"code":"import _objectSpread from\"C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationSystem=()=>{const[notifications,setNotifications]=useState([]);const[permission,setPermission]=useState(Notification.permission);useEffect(()=>{// Request notification permission on component mount\nif('Notification'in window&&permission==='default'){Notification.requestPermission().then(setPermission);}// Check for overdue tasks every minute\nconst interval=setInterval(checkOverdueTasks,60000);return()=>clearInterval(interval);},[]);const checkOverdueTasks=()=>{const now=new Date();const careReminders=JSON.parse(localStorage.getItem('careReminders')||'[]');careReminders.forEach(reminder=>{const reminderDate=new Date(reminder.date);if(reminderDate<=now&&!reminder.notified){showNotification(reminder);// Mark as notified\nreminder.notified=true;localStorage.setItem('careReminders',JSON.stringify(careReminders));}});};const showNotification=reminder=>{if(permission==='granted'){const notification=new Notification(\"PLANTA Reminder\",{body:\"Time to \".concat(reminder.type.toLowerCase(),\" your \").concat(reminder.plantName,\"!\"),icon:'/favicon.ico',badge:'/favicon.ico'});notification.onclick=()=>{window.focus();notification.close();};// Auto close after 5 seconds\nsetTimeout(()=>notification.close(),5000);}// Add to in-app notifications\nconst newNotification={id:Date.now(),message:\"Time to \".concat(reminder.type.toLowerCase(),\" your \").concat(reminder.plantName,\"!\"),type:reminder.type,timestamp:new Date(),read:false};setNotifications(prev=>[newNotification,...prev.slice(0,4)]);// Keep only 5 notifications\n};const markAsRead=id=>{setNotifications(prev=>prev.map(notif=>notif.id===id?_objectSpread(_objectSpread({},notif),{},{read:true}):notif));};const clearAll=()=>{setNotifications([]);};return/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:'20px',right:'20px',zIndex:1000},children:notifications.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',borderRadius:'8px',boxShadow:'0 4px 12px rgba(0,0,0,0.15)',padding:'16px',maxWidth:'300px',border:'1px solid #10b981'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'12px'},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{margin:0,color:'#065f46',fontSize:'14px',display:'flex',alignItems:'center',gap:'8px'},children:[/*#__PURE__*/_jsx(\"svg\",{width:\"14\",height:\"14\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\"})}),\"Care Reminders\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:clearAll,style:{background:'none',border:'none',color:'#6b7280',cursor:'pointer',fontSize:'12px'},children:\"Clear All\"})]}),notifications.slice(0,3).map(notif=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>markAsRead(notif.id),style:{padding:'8px',backgroundColor:notif.read?'#f9fafb':'#ecfdf5',borderRadius:'4px',marginBottom:'8px',cursor:'pointer',fontSize:'12px',border:notif.read?'1px solid #e5e7eb':'1px solid #10b981'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'500',color:'#065f46'},children:notif.message}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#6b7280',fontSize:'10px'},children:notif.timestamp.toLocaleTimeString()})]},notif.id))]})});};export default NotificationSystem;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","NotificationSystem","notifications","setNotifications","permission","setPermission","Notification","window","requestPermission","then","interval","setInterval","checkOverdueTasks","clearInterval","now","Date","careReminders","JSON","parse","localStorage","getItem","forEach","reminder","reminderDate","date","notified","showNotification","setItem","stringify","notification","body","concat","type","toLowerCase","plantName","icon","badge","onclick","focus","close","setTimeout","newNotification","id","message","timestamp","read","prev","slice","markAsRead","map","notif","_objectSpread","clearAll","style","position","top","right","zIndex","children","length","backgroundColor","borderRadius","boxShadow","padding","maxWidth","border","display","justifyContent","alignItems","marginBottom","margin","color","fontSize","gap","width","height","viewBox","fill","d","onClick","background","cursor","fontWeight","toLocaleTimeString"],"sources":["C:/Users/Dell/Desktop/project/frontend/Plant-Care-Scheduler-Frontend/src/components/NotificationSystem.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst NotificationSystem = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [permission, setPermission] = useState(Notification.permission);\r\n\r\n  useEffect(() => {\r\n    // Request notification permission on component mount\r\n    if ('Notification' in window && permission === 'default') {\r\n      Notification.requestPermission().then(setPermission);\r\n    }\r\n\r\n    // Check for overdue tasks every minute\r\n    const interval = setInterval(checkOverdueTasks, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const checkOverdueTasks = () => {\r\n    const now = new Date();\r\n    const careReminders = JSON.parse(localStorage.getItem('careReminders') || '[]');\r\n    \r\n    careReminders.forEach(reminder => {\r\n      const reminderDate = new Date(reminder.date);\r\n      if (reminderDate <= now && !reminder.notified) {\r\n        showNotification(reminder);\r\n        // Mark as notified\r\n        reminder.notified = true;\r\n        localStorage.setItem('careReminders', JSON.stringify(careReminders));\r\n      }\r\n    });\r\n  };\r\n\r\n  const showNotification = (reminder) => {\r\n    if (permission === 'granted') {\r\n      const notification = new Notification(`PLANTA Reminder`, {\r\n        body: `Time to ${reminder.type.toLowerCase()} your ${reminder.plantName}!`,\r\n        icon: '/favicon.ico',\r\n        badge: '/favicon.ico'\r\n      });\r\n\r\n      notification.onclick = () => {\r\n        window.focus();\r\n        notification.close();\r\n      };\r\n\r\n      // Auto close after 5 seconds\r\n      setTimeout(() => notification.close(), 5000);\r\n    }\r\n\r\n    // Add to in-app notifications\r\n    const newNotification = {\r\n      id: Date.now(),\r\n      message: `Time to ${reminder.type.toLowerCase()} your ${reminder.plantName}!`,\r\n      type: reminder.type,\r\n      timestamp: new Date(),\r\n      read: false\r\n    };\r\n\r\n    setNotifications(prev => [newNotification, ...prev.slice(0, 4)]); // Keep only 5 notifications\r\n  };\r\n\r\n  const markAsRead = (id) => {\r\n    setNotifications(prev => \r\n      prev.map(notif => \r\n        notif.id === id ? { ...notif, read: true } : notif\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setNotifications([]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'fixed', top: '20px', right: '20px', zIndex: 1000 }}>\r\n      {notifications.length > 0 && (\r\n        <div style={{ \r\n          backgroundColor: 'white', \r\n          borderRadius: '8px', \r\n          boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n          padding: '16px',\r\n          maxWidth: '300px',\r\n          border: '1px solid #10b981'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '12px' }}>\r\n            <h4 style={{ margin: 0, color: '#065f46', fontSize: '14px', display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z\"/>\r\n              </svg>\r\n              Care Reminders\r\n            </h4>\r\n            <button \r\n              onClick={clearAll}\r\n              style={{ \r\n                background: 'none', \r\n                border: 'none', \r\n                color: '#6b7280', \r\n                cursor: 'pointer',\r\n                fontSize: '12px'\r\n              }}\r\n            >\r\n              Clear All\r\n            </button>\r\n          </div>\r\n          {notifications.slice(0, 3).map(notif => (\r\n            <div \r\n              key={notif.id}\r\n              onClick={() => markAsRead(notif.id)}\r\n              style={{ \r\n                padding: '8px',\r\n                backgroundColor: notif.read ? '#f9fafb' : '#ecfdf5',\r\n                borderRadius: '4px',\r\n                marginBottom: '8px',\r\n                cursor: 'pointer',\r\n                fontSize: '12px',\r\n                border: notif.read ? '1px solid #e5e7eb' : '1px solid #10b981'\r\n              }}\r\n            >\r\n              <div style={{ fontWeight: '500', color: '#065f46' }}>{notif.message}</div>\r\n              <div style={{ color: '#6b7280', fontSize: '10px' }}>\r\n                {notif.timestamp.toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}